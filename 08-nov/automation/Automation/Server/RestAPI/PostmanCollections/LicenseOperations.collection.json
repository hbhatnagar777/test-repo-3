{
	"info": {
		"_postman_id": "66c0ecbe-b836-40e0-a3ba-35aad919d870",
		"name": "License Operations",
		"description": "######",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"Token\", jsonData.token);",
							"",
							"//tests[\"Response time is less than 5000ms\"] = responseTime < 5000;   //validate response time",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;            //validate status code",
							"",
							"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
							"",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");     //validate content-type",
							"",
							"var username = postman.getEnvironmentVariable(\"UserName\");                  ",
							"",
							"tests[\"Logged in User\"] = jsonData.userName === username;                //validate username of logged in user",
							"",
							"console.log(postman.getResponseHeader(\"Content-Type\"));",
							"console.log(postman.getEnvironmentVariable(\"Token\"));",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n    \"mode\":\"{{Mode}}\",\r\n    \"domain\":\"\",\r\n    \"username\":\"{{UserName}}\",\r\n    \"password\":\"{{Password}}\",\r\n    \"commserver\":\"\"\r\n}"
				},
				"url": {
					"raw": "{{ServerURL}}/Login",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Login"
					]
				}
			},
			"response": [
				{
					"name": "LoginResp",
					"originalRequest": {
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Length",
							"value": "1009",
							"name": "Content-Length",
							"description": ""
						},
						{
							"key": "Content-Type",
							"value": "application/json;charset=utf-8",
							"name": "Content-Type",
							"description": ""
						},
						{
							"key": "Date",
							"value": "Mon, 06 Feb 2017 08:36:28 GMT",
							"name": "Date",
							"description": ""
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/8.5",
							"name": "Server",
							"description": ""
						},
						{
							"key": "X-Powered-By",
							"value": "ASP.NET",
							"name": "X-Powered-By",
							"description": ""
						}
					],
					"cookie": [],
					"body": "{\r\"aliasName\":\"1\",\"userGUID\":\"907B1322-815B-4F81-BCAA-8ECB2D03AA0C\",\"loginAttempts\":0,\"remainingLockTime\":0,\"smtpAddress\":\"######\",\"userName\":\"admin\",\"providerType\":1,\"ccn\":0,\"token\":\"QSDK ...\",\"capability\":4328650366975,\"forcePasswordChange\":false,\"isAccountLocked\":false,\"ownerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"providerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"errList\":[\r\r]\r}"
				}
			]
		},
		{
			"name": "GET Client",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"/*if (tests[\"Response time is less than 5000ms\"] = responseTime < 5000 == true);//validate response time",
							" {",
							"     console.log(\"Response time validated\");",
							" }",
							"*/",
							"console.log(tests[\"Status code is 200\"] = responseCode.code === 200);         //validate status code",
							"",
							"console.log(tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\"));",
							"",
							"console.log(tests[\"Content-Type is application/json\"] = (postman.getResponseHeader(\"Content-Type\") === \"application/json;charset=utf-8\" || postman.getResponseHeader(\"Content-Type\") === \"application/json;charset=utf-8\" ));     //validate content-type",
							"",
							"var rand = Math.floor(Math.random() * (jsonData.clientProperties.length));",
							"",
							"postman.setEnvironmentVariable(\"clientId\", jsonData.clientProperties[rand].client.clientEntity.clientId);          //set value of clientId1",
							"",
							"postman.setEnvironmentVariable(\"clientName\", jsonData.clientProperties[rand].client.clientEntity.clientName);          //set value of clientId1",
							"",
							"console.log(\"value of clientId set to:\", postman.getEnvironmentVariable(\"clientId\"));",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var token = postman.getEnvironmentVariable(\"Token\"); ",
							"",
							"",
							"postman.setEnvironmentVariable(\"Token\", token);",
							"",
							"console.log(\"value of token set:\", token);"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}"
					}
				],
				"url": {
					"raw": "{{ServerURL}}/client",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"client"
					]
				}
			},
			"response": []
		},
		{
			"name": "Client License",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"/*if (tests[\"Response time is less than 5000ms\"] = responseTime < 5000 == true);//validate response time",
							" {",
							"     console.log(\"Response time validated\");",
							" }",
							"*/",
							"console.log(tests[\"Status code is 200\"] = responseCode.code === 200);         //validate status code",
							"",
							"console.log(tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\"));",
							"",
							"console.log(tests[\"Content-Type is application/json\"] = (postman.getResponseHeader(\"Content-Type\") === \"application/json;charset=utf-8\" || postman.getResponseHeader(\"Content-Type\") === \"application/json;charset=utf-8\" ));     //validate content-type",
							"",
							"tests[\"Response Body contains platformType\"] = responseBody.has(\"platformType\");",
							"",
							"tests[\"Response Body contains licenseType\"] = responseBody.has(\"licenseType\");",
							"",
							"tests[\"Response Body contains appType\"] = responseBody.has(\"appType\");",
							"",
							"tests[\"Response Body contains licenseName\"] = responseBody.has(\"licenseName\");",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}"
					}
				],
				"url": {
					"raw": "{{ServerURL}}/Client/2/License",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Client",
						"2",
						"License"
					]
				}
			},
			"response": [
				{
					"name": "License---json",
					"originalRequest": {
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Length",
							"value": "392",
							"name": "Content-Length",
							"description": ""
						},
						{
							"key": "Content-Type",
							"value": "application/json;charset=utf-8",
							"name": "Content-Type",
							"description": ""
						},
						{
							"key": "Date",
							"value": "Tue, 31 Oct 2017 09:02:19 GMT",
							"name": "Date",
							"description": ""
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/8.5",
							"name": "Server",
							"description": ""
						},
						{
							"key": "X-Powered-By",
							"value": "ASP.NET",
							"name": "X-Powered-By",
							"description": ""
						}
					],
					"cookie": [],
					"body": "{\r\"licensesInfo\":[\r{\r\"platformType\":1,\"license\":{\r\"licenseType\":1,\"appType\":33,\"licenseName\":\"Server File System - Windows File System\"\r}\r},{\r\"platformType\":2,\"license\":{\r\"licenseType\":11,\"appType\":1002,\"licenseName\":\"MediaAgent - MediaAgent Management\"\r}\r},{\r\"platformType\":2,\"license\":{\r\"licenseType\":84,\"appType\":1020,\"licenseName\":\"Disk Library Connector (DDO) - Magnetic Library\"\r}\r}\r]\r}"
				}
			]
		},
		{
			"name": "Client License release",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"/*if (tests[\"Response time is less than 5000ms\"] = responseTime < 5000 == true);//validate response time",
							" {",
							"     console.log(\"Response time validated\");",
							" }",
							"*/",
							"console.log(tests[\"Status code is 200\"] = responseCode.code === 200);         //validate status code",
							"",
							"console.log(tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\"));",
							"",
							"console.log(tests[\"Content-Type is application/json\"] = (postman.getResponseHeader(\"Content-Type\") === \"application/json;charset=utf-8\" || postman.getResponseHeader(\"Content-Type\") === \"application/json;charset=utf-8\" ));     //validate content-type",
							"",
							"tests[\"SUCCESS\"] = jsonData.errorCode === 0;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"isClientLevelOperation\":true,\r\n\t\"clientEntity\":\r\n\t\t{\r\n\t\t\t\"clientId\":2\r\n\t\t},\r\n\t\"licenseTypes\":[\r\n\t\t{\r\n\t\t\t\"licenseType\": 1,\r\n                \"appType\": 64,\r\n                \"licenseName\": \"Server File System - Distributed Apps\"\r\n\t\t}\r\n\t]\r\n}"
				},
				"url": {
					"raw": "{{ServerURL}}/Client/License/Release",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Client",
						"License",
						"Release"
					]
				}
			},
			"response": []
		},
		{
			"name": "Client License Reconfigure",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"/*if (tests[\"Response time is less than 5000ms\"] = responseTime < 5000 == true);//validate response time",
							" {",
							"     console.log(\"Response time validated\");",
							" }",
							"*/",
							"console.log(tests[\"Status code is 200\"] = responseCode.code === 200);         //validate status code",
							"",
							"console.log(tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\"));",
							"",
							"console.log(tests[\"Content-Type is application/json\"] = (postman.getResponseHeader(\"Content-Type\") === \"application/json;charset=utf-8\" || postman.getResponseHeader(\"Content-Type\") === \"application/json;charset=utf-8\" ));     //validate content-type",
							"",
							"tests[\"SUCCESS\"] = jsonData.errorCode === 0;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\"clientInfo\":{\r\"clientId\":2\r},\"platformTypes\":[\r1\r]\r}"
				},
				"url": {
					"raw": "{{ServerURL}}/Client/License/Reconfigure",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Client",
						"License",
						"Reconfigure"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
							"",
							"if((tests[\"Validate Logout\"] = responseBody.has(\"User logged out\")) === true);      ",
							"        console.log(\"Logout Validated\");"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var token = postman.getEnvironmentVariable(\"Token\"); ",
							"",
							"",
							"postman.setEnvironmentVariable(\"Token\", token);",
							"",
							"console.log(\"value of token set:\", token);"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{ServerURL}}/Logout",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Logout"
					]
				}
			},
			"response": []
		}
	]
}