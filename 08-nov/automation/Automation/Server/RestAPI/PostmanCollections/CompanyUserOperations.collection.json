{
	"info": {
		"_postman_id": "fcdc1e87-fe2b-4be0-8018-972e441e47e2",
		"name": "Company User Operations",
		"description": "This collection verifies basic functionality of User Operations using REST API for JSON requests and responses.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31953132"
		},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"Token\", jsonData.token);",
							"",
							"//tests[\"Response time is less than 5000ms\"] = responseTime < 5000;   //validate response time",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;            //validate status code",
							"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");     //validate content-type",
							"",
							"",
							"console.log(postman.getResponseHeader(\"Content-Type\"));",
							"console.log(postman.getEnvironmentVariable(\"Token\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n    \"mode\":\"{{Mode}}\",\r\n    \"domain\":\"\",\r\n    \"username\":\"{{UserName}}\",\r\n    \"password\":\"{{Password}}\",\r\n    \"commserver\":\"\"\r\n}"
				},
				"url": {
					"raw": "{{ServerURL}}/Login",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Login"
					]
				},
				"description": "http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/rest_api_authentication.htm"
			},
			"response": []
		},
		{
			"name": "Create Company",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = postman.getEnvironmentVariable(\"Token\"); ",
							"postman.setEnvironmentVariable(\"Token\", token);",
							"console.log(\"value of token set:\", token);",
							"var d = new Date();",
							"var time = d.getTime();",
							"postman.setEnvironmentVariable(\"adminEmail\", time);",
							"organizationName = \"TenantUserOrganization\"+Date.now();",
							"pm.environment.set(\"organizationName\", organizationName);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
							"",
							"tests[\"Response Body contains providerId\"] = responseBody.has(\"providerId\");",
							"tests[\"Response Body contains providerDomainName\"] = responseBody.has(\"providerDomainName\");",
							"",
							"postman.setEnvironmentVariable(\"providerId\", jsonData.response.entity.providerId);",
							"postman.setEnvironmentVariable(\"providerDomainName\", jsonData.response.entity.providerDomainName);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"organizationInfo\": {\r\n    \"organization\": {\r\n      \"shortName\": {\r\n        \"domainName\": \"{{organizationName}}\"\r\n      },\r\n      \"connectName\": \"{{organizationName}}\"\r\n    },\r\n    \"organizationProperties\": {\r\n      \"agePasswordDays\": 0\r\n    }\r\n  },\r\n  \"sendEmail\": false\r\n}"
				},
				"url": {
					"raw": "{{ServerURL}}/Organization",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Organization"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tenant Admin User Creation-V4 API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Request sent: \" ,pm.request.body.raw);\r",
							"console.log(\"Response received: \" ,responseBody);\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.environment.set(\"tenantAdminId\", jsonData.users[0].id);\r",
							"pm.environment.set(\"tenantAdminName\", jsonData.users[0].name);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"companyName = pm.environment.get(\"providerDomainName\");\r",
							"companyName = companyName.concat(\"\\\\\\\\Tenant Admin\");\r",
							"console.log(companyName);\r",
							"pm.environment.set(\"companyName\", companyName);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "authtoken",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"users\": [\n    {\n      \"fullName\": \"OrganizationUser{{$timestamp}}\",\n      \"name\": \"OrganizationUser{{$timestamp}}\",\n      \"email\": \"OrganizationUser{{$timestamp}}@cv.com\",\n      \"company\": {\n        \"id\": {{providerId}},\n        \"name\": \"{{providerDomainName}}\"\n      },\n      \"userGroups\": [\n        {\n          \"name\": \"{{companyName}}\"\n        }\n      ],\n      \"useSystemGeneratePassword\": false,\n      \"password\": \"{{userPassword}}\",\n      \"inviteUser\": false\n    }\n  ]\n\n}"
				},
				"url": {
					"raw": "{{ServerURL}}/v4/user",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"v4",
						"user"
					]
				}
			},
			"response": [
				{
					"name": "Requested Details not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authtoken",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userType\": \"COMPANY\",\n    \"users\": [\n        {\n            \"email\": \"eiusmod amet sint cillum pariatur\",\n            \"fullName\": \"Excepteur proident non\",\n            \"name\": \"qui sit pariatur\",\n            \"userGroups\": [\n                {\n                    \"id\": 91533092,\n                    \"name\": \"deserunt consequat occaecat\"\n                },\n                {\n                    \"id\": -70459443,\n                    \"name\": \"veniam in non\"\n                }\n            ],\n            \"useSystemGeneratePassword\": false,\n            \"password\": \"qui laborum aute esse\",\n            \"inviteUser\": false\n        },\n        {\n            \"email\": \"dolor eiusmod\",\n            \"fullName\": \"ipsum cillum eiusmod exercitation\",\n            \"name\": \"ullamco est in veniam amet\",\n            \"userGroups\": [\n                {\n                    \"id\": -85906103,\n                    \"name\": \"non\"\n                },\n                {\n                    \"id\": 91386774,\n                    \"name\": \"sit\"\n                }\n            ],\n            \"useSystemGeneratePassword\": true,\n            \"password\": \"eu dolore et\",\n            \"inviteUser\": true\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authtoken",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userType\": \"COMPANY\",\n    \"users\": [\n        {\n            \"email\": \"eiusmod amet sint cillum pariatur\",\n            \"fullName\": \"Excepteur proident non\",\n            \"name\": \"qui sit pariatur\",\n            \"userGroups\": [\n                {\n                    \"id\": 91533092,\n                    \"name\": \"deserunt consequat occaecat\"\n                },\n                {\n                    \"id\": -70459443,\n                    \"name\": \"veniam in non\"\n                }\n            ],\n            \"useSystemGeneratePassword\": false,\n            \"password\": \"qui laborum aute esse\",\n            \"inviteUser\": false\n        },\n        {\n            \"email\": \"dolor eiusmod\",\n            \"fullName\": \"ipsum cillum eiusmod exercitation\",\n            \"name\": \"ullamco est in veniam amet\",\n            \"userGroups\": [\n                {\n                    \"id\": -85906103,\n                    \"name\": \"non\"\n                },\n                {\n                    \"id\": 91386774,\n                    \"name\": \"sit\"\n                }\n            ],\n            \"useSystemGeneratePassword\": true,\n            \"password\": \"eu dolore et\",\n            \"inviteUser\": true\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"users\": [\n  {\n   \"id\": -74116798,\n   \"GUID\": \"exercitation non ex qui\",\n   \"name\": \"officia enim amet incididunt\"\n  },\n  {\n   \"id\": 25515457,\n   \"GUID\": \"Duis fugiat mollit tempor adipisicing\",\n   \"name\": \"magna cupidatat dolore\"\n  }\n ]\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authtoken",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userType\": \"COMPANY\",\n    \"users\": [\n        {\n            \"email\": \"eiusmod amet sint cillum pariatur\",\n            \"fullName\": \"Excepteur proident non\",\n            \"name\": \"qui sit pariatur\",\n            \"userGroups\": [\n                {\n                    \"id\": 91533092,\n                    \"name\": \"deserunt consequat occaecat\"\n                },\n                {\n                    \"id\": -70459443,\n                    \"name\": \"veniam in non\"\n                }\n            ],\n            \"useSystemGeneratePassword\": false,\n            \"password\": \"qui laborum aute esse\",\n            \"inviteUser\": false\n        },\n        {\n            \"email\": \"dolor eiusmod\",\n            \"fullName\": \"ipsum cillum eiusmod exercitation\",\n            \"name\": \"ullamco est in veniam amet\",\n            \"userGroups\": [\n                {\n                    \"id\": -85906103,\n                    \"name\": \"non\"\n                },\n                {\n                    \"id\": 91386774,\n                    \"name\": \"sit\"\n                }\n            ],\n            \"useSystemGeneratePassword\": true,\n            \"password\": \"eu dolore et\",\n            \"inviteUser\": true\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "GET Tenant User properties",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Response received: \" ,responseBody);",
							"var jsonData = pm.response.json();",
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Status code name has string\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"pm.test(\"Company id matches\", function () {",
							"    pm.expect(jsonData.company.id).to.eql(parseInt(parseInt(pm.environment.get(\"providerId\"))));",
							"});",
							"pm.test(\"Company name matches\", function () {",
							"    pm.expect(jsonData.company.name).to.eql(pm.environment.get(\"providerDomainName\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}"
					}
				],
				"url": {
					"raw": "{{ServerURL}}/V4/User/{{tenantAdminId}}",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"V4",
						"User",
						"{{tenantAdminId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tenant Admin Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"Token\", jsonData.token);",
							"",
							"//tests[\"Response time is less than 5000ms\"] = responseTime < 5000;   //validate response time",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;            //validate status code",
							"",
							"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
							"",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");     //validate content-type",
							"",
							"var username = postman.getEnvironmentVariable(\"tenantusername\");",
							"console.log(username);               ",
							"console.log(jsonData.userName);",
							"tests[\"Logged in User\"] = jsonData.userName.replace(/\\\\/g, '\\\\\\\\') === username;                //validate username of logged in user",
							"",
							"console.log(postman.getResponseHeader(\"Content-Type\"));",
							"console.log(postman.getEnvironmentVariable(\"Token\"));",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"username = pm.environment.get(\"tenantAdminName\")\r",
							"pm.environment.set(\"tenantusername\", username.replace(/\\\\/g, '\\\\\\\\'));\r",
							"console.log(\"check\");\r",
							"console.log(pm.environment.get(\"tenantAdminName\"));\r",
							"console.log(\"check\");\r",
							"console.log(pm.environment.get(\"tenantusername\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n    \"mode\":\"{{Mode}}\",\r\n    \"domain\":\"\",\r\n    \"username\":\"{{tenantusername}}\",\r\n    \"password\":\"{{userPassword}}\",\r\n    \"commserver\":\"\"\r\n}"
				},
				"url": {
					"raw": "{{ServerURL}}/Login",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Login"
					]
				}
			},
			"response": [
				{
					"name": "LoginResp",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Length",
							"value": "1009",
							"name": "Content-Length",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Mon, 06 Feb 2017 08:36:28 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/8.5",
							"name": "Server",
							"description": "A name for the server"
						},
						{
							"key": "X-Powered-By",
							"value": "ASP.NET",
							"name": "X-Powered-By",
							"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
						}
					],
					"cookie": [],
					"body": "{\r\"aliasName\":\"1\",\"userGUID\":\"907B1322-815B-4F81-BCAA-8ECB2D03AA0C\",\"loginAttempts\":0,\"remainingLockTime\":0,\"smtpAddress\":\"######\",\"userName\":\"admin\",\"providerType\":1,\"ccn\":0,\"token\":\"QSDK 376d3218e0d7d94d0c7f2cd3e6087055b94d9fd96505441323fe3010e0dd1aaf03a8ed0d1f7854f11b0e1692fb58bd494f9f12f45c9123252b0145caf0c45f57b67c2381068c3e5500e5c41449a1ea0bb36c72e174a8306ad982e6974477aa6fdaf4ea270f9d946a970600765293113ae80f677bf635e0001464fff7b8fade7329366008da7b98d296179c71561b88c5027798004f19f92367e3a3c7cbf70b26c9c047a0b33eeb5a64da3db412ff38394b64cf70dcee06f1dc0a759f7f31845a05b6796ac4d6c620ab89aeac6d680cd5033d5f72627ac2e4f20f2f6e9189c2304cc7baaf755a06311b6c68f2755b1099a4f9e5169d3ff687691b66de7388fcdea2de5e0235dab1032968d2e141e8b2d8c\",\"capability\":4328650366975,\"forcePasswordChange\":false,\"isAccountLocked\":false,\"ownerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"providerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"errList\":[\r\r]\r}"
				}
			]
		},
		{
			"name": "Get Company Listing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Response received: \" ,responseBody);\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"companies\");\r",
							"});\r",
							"pm.test(\"Company id matches\", function () {\r",
							"    pm.expect(jsonData.companies[0].id).to.eql(parseInt(pm.environment.get(\"providerId\")));\r",
							"});\r",
							"pm.test(\"Company name matches\", function () {\r",
							"    pm.expect(jsonData.companies[0].name).to.eql(pm.environment.get(\"providerDomainName\"));\r",
							"});\r",
							"console.log(jsonData.companies[0].id);\r",
							"console.log(parseInt(pm.environment.get(\"providerId\")));"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{ServerURL}}/V4/company",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"V4",
						"company"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Company Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Response received: \" ,responseBody);\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Company id matches\", function () {\r",
							"    pm.expect(jsonData.id).to.eql(parseInt(pm.environment.get(\"providerId\")));\r",
							"});\r",
							"pm.test(\"Company name matches\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"providerDomainName\"));\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"creationTime\");\r",
							"    pm.expect(pm.response.text()).to.include(\"status\");\r",
							"    pm.expect(pm.response.text()).to.include(\"general\");\r",
							"    pm.expect(pm.response.text()).to.include(\"security\");\r",
							"    pm.expect(pm.response.text()).to.include(\"contacts\");\r",
							"    pm.expect(pm.response.text()).to.include(\"emailSettings\");\r",
							"    pm.expect(pm.response.text()).to.include(\"sites\");\r",
							"    pm.expect(pm.response.text()).to.include(\"plans\");\r",
							"    pm.expect(pm.response.text()).to.include(\"tenantOperators\");\r",
							"    pm.expect(pm.response.text()).to.include(\"fileExceptions\");\r",
							"});\r",
							"tests[\"tenant user is present\"] = (function() {\r",
							"    for( i=0; i < jsonData.contacts.length; i++)\r",
							"        if (jsonData.contacts[i].id == pm.environment.get(\"tenantAdminId\") && jsonData.contacts[i].name == pm.environment.get(\"tenantAdminName\"))\r",
							"            return true;\r",
							"    return false;\r",
							"})();"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authtoken",
						"type": "text",
						"value": "{{Token}}"
					},
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{ServerURL}}/V4/company/{{providerId}}",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"V4",
						"company",
						"{{providerId}}"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Tenant Admin properties",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Response received: \" ,responseBody);",
							"var jsonData = pm.response.json();",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Company id matches\", function () {",
							"    pm.expect(jsonData.company.id).to.eql(parseInt(pm.environment.get(\"providerId\")));",
							"});",
							"pm.test(\"Company name matches\", function () {",
							"    pm.expect(jsonData.company.name).to.eql(pm.environment.get(\"providerDomainName\"));",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Status code name has string\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"fullName\");",
							"    pm.expect(pm.response.text()).to.include(\"email\");",
							"    pm.expect(pm.response.text()).to.include(\"enabled\");",
							"    pm.expect(pm.response.text()).to.include(\"associatedUserGroups\");",
							"    pm.expect(pm.response.text()).to.include(\"serviceType\");",
							"    pm.expect(pm.response.text()).to.include(\"lastLoggedIn\");",
							"    pm.expect(pm.response.text()).to.include(\"authenticationMethod\");",
							"    pm.expect(pm.response.text()).to.include(\"name\");",
							"    pm.expect(pm.response.text()).to.include(\"GUID\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}"
					}
				],
				"url": {
					"raw": "{{ServerURL}}/V4/User/{{tenantAdminId}}",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"V4",
						"User",
						"{{tenantAdminId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Modify created user",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"fullName\": \"OrganizationUser{{$timestamp}}_modified\",\r\n    \"newName\": \"OrganizationUser{{$timestamp}}_modified\",\r\n    \"email\": \"OrganizationUser{{$timestamp}}_modified@cv.com\",\r\n    \"enabled\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{ServerURL}}/V4/user/{{tenantAdminId}}",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"V4",
						"user",
						"{{tenantAdminId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Re-login as admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"Token\", jsonData.token);",
							"",
							"//tests[\"Response time is less than 5000ms\"] = responseTime < 5000;   //validate response time",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;            //validate status code",
							"",
							"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
							"",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");     //validate content-type",
							"",
							"        ",
							"",
							"",
							"",
							"console.log(postman.getResponseHeader(\"Content-Type\"));",
							"console.log(postman.getEnvironmentVariable(\"Token\"));",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n    \"mode\":\"{{Mode}}\",\r\n    \"domain\":\"\",\r\n    \"username\":\"{{UserName}}\",\r\n    \"password\":\"{{Password}}\",\r\n    \"commserver\":\"\"\r\n}"
				},
				"url": {
					"raw": "{{ServerURL}}/Login",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deactivate Company",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"Deactivation success\"] = jsonData.response.errorCode === 0;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"deactivateOptions\": {\n        \"disableBackup\": true,\n        \"disableRestore\": true,\n        \"disableLogin\": true\n    }\n}"
				},
				"url": {
					"raw": "{{ServerURL}}/Organization/{{providerId}}/action/deactivate",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Organization",
						"{{providerId}}",
						"action",
						"deactivate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Company",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Validating error code\"] = jsonData.errorCode === 0;",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "{{Accept}}"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{ServerURL}}/Organization/{{providerId}}",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Organization",
						"{{providerId}}"
					]
				},
				"description": "<h2>Description</h2>\nThis operation deletes a org."
			},
			"response": []
		},
		{
			"name": "Try to create a tenant user with deleted company",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Request sent: \" ,pm.request.body.raw);\r",
							"console.log(\"Response received: \" ,responseBody);\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.test(\"Status code is 500\", function () {\r",
							"    pm.response.to.have.status(500);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Internal Server Error\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"companyName = pm.environment.get(\"providerDomainName\");\r",
							"companyName = companyName.concat(\"\\\\\\\\Tenant Admin\");\r",
							"console.log(companyName);\r",
							"pm.environment.set(\"companyName\", companyName);\r",
							"setTimeout(function(){//put your code in here to be delayed by 2 seconds\r",
							"    console.log(\"10s sleep\");\r",
							"},20000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "authtoken",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"users\": [\n    {\n      \"fullName\": \"OrganizationUser{{$timestamp}}\",\n      \"name\": \"OrganizationUser{{$timestamp}}\",\n      \"email\": \"OrganizationUser{{$timestamp}}@cv.com\",\n      \"company\": {\n        \"id\": {{providerId}},\n        \"name\": \"{{providerDomainName}}\"\n      },\n      \"userGroups\": [\n        {\n          \"name\": \"{{companyName}}\"\n        }\n      ],\n      \"useSystemGeneratePassword\": false,\n      \"password\": \"QUNARSI4T+KAmXgzKmZiXTZzLGRpL00hIG98YSspJHpjai55cmBfdj59Sz87N1UmMD1bMi1lOihCPHd0I2t7XiVRXH4=\",\n      \"inviteUser\": false\n    }\n  ]\n\n}"
				},
				"url": {
					"raw": "{{ServerURL}}/v4/user",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"v4",
						"user"
					]
				}
			},
			"response": [
				{
					"name": "Requested Details not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authtoken",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userType\": \"COMPANY\",\n    \"users\": [\n        {\n            \"email\": \"eiusmod amet sint cillum pariatur\",\n            \"fullName\": \"Excepteur proident non\",\n            \"name\": \"qui sit pariatur\",\n            \"userGroups\": [\n                {\n                    \"id\": 91533092,\n                    \"name\": \"deserunt consequat occaecat\"\n                },\n                {\n                    \"id\": -70459443,\n                    \"name\": \"veniam in non\"\n                }\n            ],\n            \"useSystemGeneratePassword\": false,\n            \"password\": \"qui laborum aute esse\",\n            \"inviteUser\": false\n        },\n        {\n            \"email\": \"dolor eiusmod\",\n            \"fullName\": \"ipsum cillum eiusmod exercitation\",\n            \"name\": \"ullamco est in veniam amet\",\n            \"userGroups\": [\n                {\n                    \"id\": -85906103,\n                    \"name\": \"non\"\n                },\n                {\n                    \"id\": 91386774,\n                    \"name\": \"sit\"\n                }\n            ],\n            \"useSystemGeneratePassword\": true,\n            \"password\": \"eu dolore et\",\n            \"inviteUser\": true\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authtoken",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userType\": \"COMPANY\",\n    \"users\": [\n        {\n            \"email\": \"eiusmod amet sint cillum pariatur\",\n            \"fullName\": \"Excepteur proident non\",\n            \"name\": \"qui sit pariatur\",\n            \"userGroups\": [\n                {\n                    \"id\": 91533092,\n                    \"name\": \"deserunt consequat occaecat\"\n                },\n                {\n                    \"id\": -70459443,\n                    \"name\": \"veniam in non\"\n                }\n            ],\n            \"useSystemGeneratePassword\": false,\n            \"password\": \"qui laborum aute esse\",\n            \"inviteUser\": false\n        },\n        {\n            \"email\": \"dolor eiusmod\",\n            \"fullName\": \"ipsum cillum eiusmod exercitation\",\n            \"name\": \"ullamco est in veniam amet\",\n            \"userGroups\": [\n                {\n                    \"id\": -85906103,\n                    \"name\": \"non\"\n                },\n                {\n                    \"id\": 91386774,\n                    \"name\": \"sit\"\n                }\n            ],\n            \"useSystemGeneratePassword\": true,\n            \"password\": \"eu dolore et\",\n            \"inviteUser\": true\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"users\": [\n  {\n   \"id\": -74116798,\n   \"GUID\": \"exercitation non ex qui\",\n   \"name\": \"officia enim amet incididunt\"\n  },\n  {\n   \"id\": 25515457,\n   \"GUID\": \"Duis fugiat mollit tempor adipisicing\",\n   \"name\": \"magna cupidatat dolore\"\n  }\n ]\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authtoken",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userType\": \"COMPANY\",\n    \"users\": [\n        {\n            \"email\": \"eiusmod amet sint cillum pariatur\",\n            \"fullName\": \"Excepteur proident non\",\n            \"name\": \"qui sit pariatur\",\n            \"userGroups\": [\n                {\n                    \"id\": 91533092,\n                    \"name\": \"deserunt consequat occaecat\"\n                },\n                {\n                    \"id\": -70459443,\n                    \"name\": \"veniam in non\"\n                }\n            ],\n            \"useSystemGeneratePassword\": false,\n            \"password\": \"qui laborum aute esse\",\n            \"inviteUser\": false\n        },\n        {\n            \"email\": \"dolor eiusmod\",\n            \"fullName\": \"ipsum cillum eiusmod exercitation\",\n            \"name\": \"ullamco est in veniam amet\",\n            \"userGroups\": [\n                {\n                    \"id\": -85906103,\n                    \"name\": \"non\"\n                },\n                {\n                    \"id\": 91386774,\n                    \"name\": \"sit\"\n                }\n            ],\n            \"useSystemGeneratePassword\": true,\n            \"password\": \"eu dolore et\",\n            \"inviteUser\": true\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Try to get deleted Tenant User properties",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Response received: \" ,responseBody);",
							"var jsonData = pm.response.json();",
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Body contains not found\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"not found\");",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(function(){//put your code in here to be delayed by 2 seconds\r",
							"    console.log(\"10s sleep\");\r",
							"},10000);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}"
					}
				],
				"url": {
					"raw": "{{ServerURL}}/V4/User/{{tenantAdminId}}",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"V4",
						"User",
						"{{tenantAdminId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"console.log(\"Response received:\", responseBody);",
							"tests[\"Validating if Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"Validating if Status code name has string\"] = responseCode.name.has(\"OK\");",
							"",
							"if((tests[\"Validating Logout\"] = responseBody.has(\"User logged out\")));      ",
							"        console.log(\"Logout Validated\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{ServerURL}}/Logout",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Logout"
					]
				}
			},
			"response": []
		}
	]
}