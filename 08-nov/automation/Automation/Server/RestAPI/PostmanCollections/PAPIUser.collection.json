{
	"info": {
		"_postman_id": "36308122-42f9-4749-803b-be18a30564d0",
		"name": "PAPI -- User",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31953132"
	},
	"item": [
		{
			"name": "0 - Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"Token\", jsonData.token);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n    \"mode\":4,\r\n    \"domain\":\"\",\r\n    \"username\":\"{{UserName}}\",\r\n    \"password\":\"{{Password}}\",\r\n    \"commserver\":\"\"\r\n    \r\n}"
				},
				"url": {
					"raw": "{{ServerURL}}/Login",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Login"
					]
				}
			},
			"response": [
				{
					"name": "Login",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n    \"mode\":4,\r\n    \"domain\":\"\",\r\n    \"username\":\"{{UserName}}\",\r\n    \"password\":\"{{Password}}\",\r\n    \"commserver\":\"\"\r\n    \r\n}"
						},
						"url": {
							"raw": "{{ServerURL}}/Login",
							"host": [
								"{{ServerURL}}"
							],
							"path": [
								"Login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "private"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Content-Type",
							"value": "application/json;charset=utf-8"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/8.5"
						},
						{
							"key": "Server",
							"value": "Kestrel"
						},
						{
							"key": "WEBSERVERCORE-FLAG",
							"value": "true"
						},
						{
							"key": "X-Powered-By",
							"value": "ASP.NET"
						},
						{
							"key": "X-Powered-By",
							"value": "ASP.NET"
						},
						{
							"key": "X-AspNet-Version",
							"value": "4.0.30319"
						},
						{
							"key": "Date",
							"value": "Mon, 21 Oct 2019 11:34:53 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"aliasName\": \"1\",\n    \"userGUID\": \"80ECA8AB-E88E-4B71-A5BE-233932068CC2\",\n    \"loginAttempts\": 0,\n    \"remainingLockTime\": 0,\n    \"smtpAddress\": \"snasim@commvault.com\",\n    \"userName\": \"admin\",\n    \"providerType\": 1,\n    \"ccn\": 0,\n    \"token\": \"QSDK ...\",\n    \"capability\": 4328650366975,\n    \"forcePasswordChange\": false,\n    \"isAccountLocked\": false,\n    \"ownerOrganization\": {\n        \"providerId\": 0,\n        \"GUID\": \"95189d4e-4a7f-4cb3-969f-80d5871ac13f\",\n        \"providerDomainName\": \"Commcell\"\n    },\n    \"providerOrganization\": {\n        \"providerId\": 0,\n        \"GUID\": \"95189d4e-4a7f-4cb3-969f-80d5871ac13f\",\n        \"providerDomainName\": \"Commcell\"\n    },\n    \"errList\": []\n}"
				}
			]
		},
		{
			"name": "Get Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//console.log(\"Request sent: \" ,pm.request.body.raw);\r",
							"console.log(\"Response received: \" ,responseBody);\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"users\");\r",
							"    pm.expect(pm.response.text()).to.include(\"name\");\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"    pm.expect(pm.response.text()).to.include(\"GUID\");\r",
							"    pm.expect(pm.response.text()).to.include(\"email\");\r",
							"    pm.expect(pm.response.text()).to.include(\"fullName\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "authtoken",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "mode",
						"value": "EdgeMode"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/user",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							},
							{
								"key": "mode",
								"value": "sed proident in"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"users\": [\n  {\n   \"name\": \"et sunt adipisicing sint\",\n   \"id\": 68516075,\n   \"GUID\": \"sed in eiusmod\",\n   \"email\": \"cupidatat dolore reprehenderit\",\n   \"fullName\": \"deserunt Excepteur voluptate\",\n   \"plan\": {\n    \"id\": -31664109,\n    \"name\": \"cupidatat\"\n   }\n  },\n  {\n   \"name\": \"fugiat in\",\n   \"id\": 4314592,\n   \"GUID\": \"nostrud deserunt sed\",\n   \"email\": \"aute fugiat incididunt dolor\",\n   \"fullName\": \"dolor reprehenderit anim\",\n   \"plan\": {\n    \"id\": 6626922,\n    \"name\": \"eu\"\n   }\n  }\n ]\n}"
				},
				{
					"name": "Requested Details not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							},
							{
								"key": "mode",
								"value": "sed proident in"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Request sent: \" ,pm.request.body.raw);\r",
							"console.log(\"Response received: \" ,responseBody);\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.environment.set(\"PAPIuser1Id\", jsonData.users[0].id);\r",
							"pm.environment.set(\"PAPIuser2Id\", jsonData.users[1].id);\r",
							"pm.environment.set(\"PAPIuser3Id\", jsonData.users[2].id);\r",
							"pm.environment.set(\"PAPIuser1Name\", jsonData.users[0].name);\r",
							"pm.environment.set(\"PAPIuser2Name\", jsonData.users[1].name);\r",
							"pm.environment.set(\"PAPIuser3Name\", jsonData.users[2].name);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "authtoken",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"userType\": \"LOCAL\",\n    \"users\": [\n        {\n            \"email\": \"PAPI1_{{$timestamp}}@papi.com\",\n            \"fullName\": \"PAPI1_{{$timestamp}}\",\n            \"name\": \"PAPI1_{{$timestamp}}\",\n            \"userGroups\": [\n                \n                {\n                    \"id\": 1,\n                    \"name\": \"master\"\n                }\n            ],\n            \"useSystemGeneratePassword\": false,\n            \"password\": \"Q29tbVZhdWx0QEAxMjM0NTY=\",\n            \"inviteUser\": false\n        },\n        {\n            \"email\": \"PAPI2_{{$timestamp}}@papi.com\",\n            \"fullName\": \"PAPI2_{{$timestamp}}\",\n            \"name\": \"PAPI2_{{$timestamp}}\",\n            \"userGroups\": [\n                {\n                    \"id\": 1,\n                    \"name\": \"master\"\n                }\n            ],\n            \"useSystemGeneratePassword\": false,\n            \"password\": \"Q29tbVZhdWx0QEAxMjM0NTY=\",\n            \"inviteUser\": false\n        },\n        {\n            \"email\": \"PAPI3_{{$timestamp}}@papi.com\",\n            \"fullName\": \"PAPI3_{{$timestamp}}\",\n            \"name\": \"PAPI3_{{$timestamp}}\",\n            \"userGroups\": [\n                {\n                    \"id\": 1,\n                    \"name\": \"master\"\n                }\n            ],\n            \"useSystemGeneratePassword\": false,\n            \"password\": \"Q29tbVZhdWx0QEAxMjM0NTY=\",\n            \"inviteUser\": false\n        }\n    ]\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/user",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": [
				{
					"name": "Requested Details not found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userType\": \"COMPANY\",\n    \"users\": [\n        {\n            \"email\": \"eiusmod amet sint cillum pariatur\",\n            \"fullName\": \"Excepteur proident non\",\n            \"name\": \"qui sit pariatur\",\n            \"userGroups\": [\n                {\n                    \"id\": 91533092,\n                    \"name\": \"deserunt consequat occaecat\"\n                },\n                {\n                    \"id\": -70459443,\n                    \"name\": \"veniam in non\"\n                }\n            ],\n            \"useSystemGeneratePassword\": false,\n            \"password\": \"qui laborum aute esse\",\n            \"inviteUser\": false\n        },\n        {\n            \"email\": \"dolor eiusmod\",\n            \"fullName\": \"ipsum cillum eiusmod exercitation\",\n            \"name\": \"ullamco est in veniam amet\",\n            \"userGroups\": [\n                {\n                    \"id\": -85906103,\n                    \"name\": \"non\"\n                },\n                {\n                    \"id\": 91386774,\n                    \"name\": \"sit\"\n                }\n            ],\n            \"useSystemGeneratePassword\": true,\n            \"password\": \"eu dolore et\",\n            \"inviteUser\": true\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userType\": \"COMPANY\",\n    \"users\": [\n        {\n            \"email\": \"eiusmod amet sint cillum pariatur\",\n            \"fullName\": \"Excepteur proident non\",\n            \"name\": \"qui sit pariatur\",\n            \"userGroups\": [\n                {\n                    \"id\": 91533092,\n                    \"name\": \"deserunt consequat occaecat\"\n                },\n                {\n                    \"id\": -70459443,\n                    \"name\": \"veniam in non\"\n                }\n            ],\n            \"useSystemGeneratePassword\": false,\n            \"password\": \"qui laborum aute esse\",\n            \"inviteUser\": false\n        },\n        {\n            \"email\": \"dolor eiusmod\",\n            \"fullName\": \"ipsum cillum eiusmod exercitation\",\n            \"name\": \"ullamco est in veniam amet\",\n            \"userGroups\": [\n                {\n                    \"id\": -85906103,\n                    \"name\": \"non\"\n                },\n                {\n                    \"id\": 91386774,\n                    \"name\": \"sit\"\n                }\n            ],\n            \"useSystemGeneratePassword\": true,\n            \"password\": \"eu dolore et\",\n            \"inviteUser\": true\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"users\": [\n  {\n   \"id\": -74116798,\n   \"GUID\": \"exercitation non ex qui\",\n   \"name\": \"officia enim amet incididunt\"\n  },\n  {\n   \"id\": 25515457,\n   \"GUID\": \"Duis fugiat mollit tempor adipisicing\",\n   \"name\": \"magna cupidatat dolore\"\n  }\n ]\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userType\": \"COMPANY\",\n    \"users\": [\n        {\n            \"email\": \"eiusmod amet sint cillum pariatur\",\n            \"fullName\": \"Excepteur proident non\",\n            \"name\": \"qui sit pariatur\",\n            \"userGroups\": [\n                {\n                    \"id\": 91533092,\n                    \"name\": \"deserunt consequat occaecat\"\n                },\n                {\n                    \"id\": -70459443,\n                    \"name\": \"veniam in non\"\n                }\n            ],\n            \"useSystemGeneratePassword\": false,\n            \"password\": \"qui laborum aute esse\",\n            \"inviteUser\": false\n        },\n        {\n            \"email\": \"dolor eiusmod\",\n            \"fullName\": \"ipsum cillum eiusmod exercitation\",\n            \"name\": \"ullamco est in veniam amet\",\n            \"userGroups\": [\n                {\n                    \"id\": -85906103,\n                    \"name\": \"non\"\n                },\n                {\n                    \"id\": 91386774,\n                    \"name\": \"sit\"\n                }\n            ],\n            \"useSystemGeneratePassword\": true,\n            \"password\": \"eu dolore et\",\n            \"inviteUser\": true\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Get Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//console.log(\"Request sent: \" ,pm.request.body.raw);\r",
							"console.log(\"Response received: \" ,responseBody);\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"users\");\r",
							"    pm.expect(pm.response.text()).to.include(\"name\");\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"    pm.expect(pm.response.text()).to.include(\"GUID\");\r",
							"    pm.expect(pm.response.text()).to.include(\"email\");\r",
							"    pm.expect(pm.response.text()).to.include(\"fullName\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body contains new users\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"PAPIuser1Name\"));\r",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"PAPIuser2Name\"));\r",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"PAPIuser3Name\"));\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "authtoken",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "mode",
						"value": "EdgeMode"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/user",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							},
							{
								"key": "mode",
								"value": "sed proident in"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"users\": [\n  {\n   \"name\": \"et sunt adipisicing sint\",\n   \"id\": 68516075,\n   \"GUID\": \"sed in eiusmod\",\n   \"email\": \"cupidatat dolore reprehenderit\",\n   \"fullName\": \"deserunt Excepteur voluptate\",\n   \"plan\": {\n    \"id\": -31664109,\n    \"name\": \"cupidatat\"\n   }\n  },\n  {\n   \"name\": \"fugiat in\",\n   \"id\": 4314592,\n   \"GUID\": \"nostrud deserunt sed\",\n   \"email\": \"aute fugiat incididunt dolor\",\n   \"fullName\": \"dolor reprehenderit anim\",\n   \"plan\": {\n    \"id\": 6626922,\n    \"name\": \"eu\"\n   }\n  }\n ]\n}"
				},
				{
					"name": "Requested Details not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							},
							{
								"key": "mode",
								"value": "sed proident in"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Get User Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//console.log(\"Request sent: \" ,pm.request.body.raw);\r",
							"console.log(\"Response received: \" ,responseBody);\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"    \r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"PAPIuser1Name\"));\r",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"PAPIuser1Id\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"fullName\");\r",
							"    pm.expect(pm.response.text()).to.include(\"email\");\r",
							"    pm.expect(pm.response.text()).to.include(\"enabled\");\r",
							"    pm.expect(pm.response.text()).to.include(\"GUID\");\r",
							"    \r",
							"    pm.expect(pm.response.text()).to.include(\"authenticationMethod\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "authtoken",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "mode",
						"value": "EdgeMode"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/user/{{PAPIuser1Id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"{{PAPIuser1Id}}"
					]
				}
			},
			"response": [
				{
					"name": "Requested Details not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							},
							{
								"key": "mode",
								"value": "sed proident in"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							},
							{
								"key": "mode",
								"value": "sed proident in"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"fullName\": \"do velit Ut\",\n \"email\": \"voluptate pariatur laborum\",\n \"enabled\": false,\n \"id\": 94047634,\n \"name\": \"consequat\",\n \"GUID\": \"eu do id eiusmod\",\n \"plan\": {\n  \"id\": 26029642,\n  \"name\": \"quis dolor Excepteur\"\n },\n \"associatedUserGroups\": [\n  {\n   \"id\": -13296876,\n   \"name\": \"enim consequat\"\n  },\n  {\n   \"id\": 22507807,\n   \"name\": \"ex elit\"\n  }\n ],\n \"associatedEntities\": [\n  {\n   \"id\": 52670948,\n   \"name\": \"veniam exercitation pariatur\",\n   \"type\": \"cupidatat sit\",\n   \"role\": {\n    \"id\": 83293086,\n    \"name\": \"sint ullamco in\"\n   },\n   \"permissionList\": {\n    \"permissionId\": -84884886,\n    \"permissionName\": \"eu nisi magna ea\",\n    \"categoryId\": -29480552,\n    \"categoryName\": \"aute aliqua\"\n   }\n  },\n  {\n   \"id\": 86258107,\n   \"name\": \"voluptate\",\n   \"type\": \"sint culpa sit\",\n   \"role\": {\n    \"id\": -45640416,\n    \"name\": \"tempor sunt laborum in ut\"\n   },\n   \"permissionList\": {\n    \"permissionId\": 46781429,\n    \"permissionName\": \"incidi\",\n    \"categoryId\": 53551025,\n    \"categoryName\": \"cupidatat deserunt sunt aliquip\"\n   }\n  }\n ]\n}"
				}
			]
		},
		{
			"name": "Modify User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Request sent: \" ,pm.request.body.raw);\r",
							"console.log(\"Response received: \" ,responseBody);\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.errorString).to.eql(\"\");\r",
							"    pm.expect(jsonData.errorCode).to.eql(0);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "authtoken",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"fullName\": \"{{PAPIuser2Name}}_modified\",\n    \"newName\": \"{{PAPIuser2Name}}\",\n    \"email\": \"PAPI2_{{$timestamp}}@papi.com\",\n    \"userGroups\": [],\n    \"newPassword\": \"Q29tbVZhdWx0QEAxMjM0NTY=\",\n    \"validationPassword\": \"{{Password}}\",\n    \"plan\": {},\n    \"enabled\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/{{PAPIuser2Id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"{{PAPIuser2Id}}"
					]
				}
			},
			"response": [
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fullName\": \"ut occ\",\n    \"newName\": \"cillum nostrud\",\n    \"email\": \"quis est\",\n    \"userGroups\": [\n        {\n            \"id\": 45403097,\n            \"name\": \"exercitation id\"\n        },\n        {\n            \"id\": 3148336,\n            \"name\": \"laborum in\"\n        }\n    ],\n    \"newPassword\": \"et enim ipsum nostrud\",\n    \"validationPassword\": \"Lorem aliqua nostrud quis\",\n    \"plan\": {\n        \"id\": -57434310,\n        \"name\": \"commodo qui cupidatat ullamco aliqua\"\n    },\n    \"enabled\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Success",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fullName\": \"ut occ\",\n    \"newName\": \"cillum nostrud\",\n    \"email\": \"quis est\",\n    \"userGroups\": [\n        {\n            \"id\": 45403097,\n            \"name\": \"exercitation id\"\n        },\n        {\n            \"id\": 3148336,\n            \"name\": \"laborum in\"\n        }\n    ],\n    \"newPassword\": \"et enim ipsum nostrud\",\n    \"validationPassword\": \"Lorem aliqua nostrud quis\",\n    \"plan\": {\n        \"id\": -57434310,\n        \"name\": \"commodo qui cupidatat ullamco aliqua\"\n    },\n    \"enabled\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"errorMessage\": \"et proident nostrud\",\n \"errorCode\": -53288614\n}"
				},
				{
					"name": "Requested Details not found",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fullName\": \"ut occ\",\n    \"newName\": \"cillum nostrud\",\n    \"email\": \"quis est\",\n    \"userGroups\": [\n        {\n            \"id\": 45403097,\n            \"name\": \"exercitation id\"\n        },\n        {\n            \"id\": 3148336,\n            \"name\": \"laborum in\"\n        }\n    ],\n    \"newPassword\": \"et enim ipsum nostrud\",\n    \"validationPassword\": \"Lorem aliqua nostrud quis\",\n    \"plan\": {\n        \"id\": -57434310,\n        \"name\": \"commodo qui cupidatat ullamco aliqua\"\n    },\n    \"enabled\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Get User Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//console.log(\"Request sent: \" ,pm.request.body.raw);\r",
							"console.log(\"Response received: \" ,responseBody);\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"    \r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"PAPIuser2Name\"));\r",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"PAPIuser2Id\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"fullName\");\r",
							"    pm.expect(pm.response.text()).to.include(\"_modified\");\r",
							"    pm.expect(pm.response.text()).to.include(\"email\");\r",
							"    pm.expect(pm.response.text()).to.include(\"enabled\");\r",
							"    pm.expect(pm.response.text()).to.include(\"GUID\");\r",
							"    pm.expect(pm.response.text()).to.include(\"associatedUserGroups\");\r",
							"    pm.expect(pm.response.text()).to.include(\"authenticationMethod\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "authtoken",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "mode",
						"value": "EdgeMode"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/user/{{PAPIuser2Id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"{{PAPIuser2Id}}"
					]
				}
			},
			"response": [
				{
					"name": "Requested Details not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							},
							{
								"key": "mode",
								"value": "sed proident in"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							},
							{
								"key": "mode",
								"value": "sed proident in"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"fullName\": \"do velit Ut\",\n \"email\": \"voluptate pariatur laborum\",\n \"enabled\": false,\n \"id\": 94047634,\n \"name\": \"consequat\",\n \"GUID\": \"eu do id eiusmod\",\n \"plan\": {\n  \"id\": 26029642,\n  \"name\": \"quis dolor Excepteur\"\n },\n \"associatedUserGroups\": [\n  {\n   \"id\": -13296876,\n   \"name\": \"enim consequat\"\n  },\n  {\n   \"id\": 22507807,\n   \"name\": \"ex elit\"\n  }\n ],\n \"associatedEntities\": [\n  {\n   \"id\": 52670948,\n   \"name\": \"veniam exercitation pariatur\",\n   \"type\": \"cupidatat sit\",\n   \"role\": {\n    \"id\": 83293086,\n    \"name\": \"sint ullamco in\"\n   },\n   \"permissionList\": {\n    \"permissionId\": -84884886,\n    \"permissionName\": \"eu nisi magna ea\",\n    \"categoryId\": -29480552,\n    \"categoryName\": \"aute aliqua\"\n   }\n  },\n  {\n   \"id\": 86258107,\n   \"name\": \"voluptate\",\n   \"type\": \"sint culpa sit\",\n   \"role\": {\n    \"id\": -45640416,\n    \"name\": \"tempor sunt laborum in ut\"\n   },\n   \"permissionList\": {\n    \"permissionId\": 46781429,\n    \"permissionName\": \"incidi\",\n    \"categoryId\": 53551025,\n    \"categoryName\": \"cupidatat deserunt sunt aliquip\"\n   }\n  }\n ]\n}"
				}
			]
		},
		{
			"name": "Delete Multiple Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//console.log(\"Request sent: \" ,pm.request.body.raw);\r",
							"console.log(\"Response received: \" ,responseBody);\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.response[0].errorString).to.eql(\"Success\");\r",
							"    pm.expect(jsonData.response[0].errorCode).to.eql(0);\r",
							"    pm.expect(jsonData.response[0].entity.userId).to.eql(pm.environment.get(\"PAPIuser1Id\"));\r",
							"    pm.expect(jsonData.response[0].entity.userName).to.eql(pm.environment.get(\"PAPIuser1Name\"));\r",
							"    pm.expect(jsonData.response[1].errorString).to.eql(\"Success\");\r",
							"    pm.expect(jsonData.response[1].errorCode).to.eql(0);\r",
							"    pm.expect(jsonData.response[1].entity.userId).to.eql(pm.environment.get(\"PAPIuser2Id\"));\r",
							"    pm.expect(jsonData.response[1].entity.userName).to.eql(pm.environment.get(\"PAPIuser2Name\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "authtoken",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"users\": [\n        {\n            \"skipOwnerTransfer\": false,\n            \"newUser\": {\n                \"name\": \"admin\"\n            },\n            \"user\": {\n                \"id\": {{PAPIuser1Id}},\n                \"name\": \"{{PAPIuser1Name}}\"\n            }\n        },\n        {\n            \"skipOwnerTransfer\": true,\n            \"newUserGroup\": {\n                \"name\": \"master\"\n            },\n            \"user\": {\n                \"id\": {{PAPIuser2Id}},\n                \"name\": \"{{PAPIuser2Name}}\"\n            }\n        }\n    ]\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/user/action/delete",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"action",
						"delete"
					]
				}
			},
			"response": [
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"users\": [\n        {\n            \"skipOwnerTransfer\": true,\n            \"newUser\": {\n                \"id\": -21848126,\n                \"name\": \"voluptate nostrud in proident\"\n            },\n            \"newUserGroup\": {\n                \"id\": -40699680,\n                \"name\": \"id Ut culpa\"\n            },\n            \"user\": {\n                \"id\": 93915967,\n                \"name\": \"tempor quis\"\n            }\n        },\n        {\n            \"skipOwnerTransfer\": false,\n            \"newUser\": {\n                \"id\": -41493022,\n                \"name\": \"dolore\"\n            },\n            \"newUserGroup\": {\n                \"id\": 3055601,\n                \"name\": \"dolore labore et pariatur\"\n            },\n            \"user\": {\n                \"id\": 1218634,\n                \"name\": \"do ipsum ut\"\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/action/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"action",
								"delete"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Success",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"users\": [\n        {\n            \"skipOwnerTransfer\": true,\n            \"newUser\": {\n                \"id\": -21848126,\n                \"name\": \"voluptate nostrud in proident\"\n            },\n            \"newUserGroup\": {\n                \"id\": -40699680,\n                \"name\": \"id Ut culpa\"\n            },\n            \"user\": {\n                \"id\": 93915967,\n                \"name\": \"tempor quis\"\n            }\n        },\n        {\n            \"skipOwnerTransfer\": false,\n            \"newUser\": {\n                \"id\": -41493022,\n                \"name\": \"dolore\"\n            },\n            \"newUserGroup\": {\n                \"id\": 3055601,\n                \"name\": \"dolore labore et pariatur\"\n            },\n            \"user\": {\n                \"id\": 1218634,\n                \"name\": \"do ipsum ut\"\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/action/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"action",
								"delete"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"errorMessage\": \"et proident nostrud\",\n \"errorCode\": -53288614\n}"
				},
				{
					"name": "Requested Details not found",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"users\": [\n        {\n            \"skipOwnerTransfer\": true,\n            \"newUser\": {\n                \"id\": -21848126,\n                \"name\": \"voluptate nostrud in proident\"\n            },\n            \"newUserGroup\": {\n                \"id\": -40699680,\n                \"name\": \"id Ut culpa\"\n            },\n            \"user\": {\n                \"id\": 93915967,\n                \"name\": \"tempor quis\"\n            }\n        },\n        {\n            \"skipOwnerTransfer\": false,\n            \"newUser\": {\n                \"id\": -41493022,\n                \"name\": \"dolore\"\n            },\n            \"newUserGroup\": {\n                \"id\": 3055601,\n                \"name\": \"dolore labore et pariatur\"\n            },\n            \"user\": {\n                \"id\": 1218634,\n                \"name\": \"do ipsum ut\"\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/action/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"action",
								"delete"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//console.log(\"Request sent: \" ,pm.request.body.raw);\r",
							"console.log(\"Response received: \" ,responseBody);\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Status code  has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "authtoken",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/user/{{PAPIuser3Id}}?skipOwnerShipTransfer=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"{{PAPIuser3Id}}"
					],
					"query": [
						{
							"key": "skipOwnerShipTransfer",
							"value": "true",
							"description": "(Required) If user properties needn't be transferred to other user or usergroup"
						},
						{
							"key": "transferToUser",
							"value": "23491673",
							"description": "(Required) If user properties needs to be transferred to other user",
							"disabled": true
						},
						{
							"key": "transfertoUserGroup",
							"value": "23491673",
							"description": "(Required) If user properties needs to be transferred to other userGroup",
							"disabled": true
						}
					]
				}
			},
			"response": [
				{
					"name": "Requested Details not found",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/:userId?skipOwnerShipTransfer=true&transferToUser=23491673&transfertoUserGroup=23491673",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":userId"
							],
							"query": [
								{
									"key": "skipOwnerShipTransfer",
									"value": "true"
								},
								{
									"key": "transferToUser",
									"value": "23491673"
								},
								{
									"key": "transfertoUserGroup",
									"value": "23491673"
								}
							],
							"variable": [
								{
									"key": "userId"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Success",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/:userId?skipOwnerShipTransfer=true&transferToUser=23491673&transfertoUserGroup=23491673",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":userId"
							],
							"query": [
								{
									"key": "skipOwnerShipTransfer",
									"value": "true"
								},
								{
									"key": "transferToUser",
									"value": "23491673"
								},
								{
									"key": "transfertoUserGroup",
									"value": "23491673"
								}
							],
							"variable": [
								{
									"key": "userId"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"errorMessage\": \"et proident nostrud\",\n \"errorCode\": -53288614\n}"
				},
				{
					"name": "Server Error",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/:userId?skipOwnerShipTransfer=true&transferToUser=23491673&transfertoUserGroup=23491673",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":userId"
							],
							"query": [
								{
									"key": "skipOwnerShipTransfer",
									"value": "true"
								},
								{
									"key": "transferToUser",
									"value": "23491673"
								},
								{
									"key": "transfertoUserGroup",
									"value": "23491673"
								}
							],
							"variable": [
								{
									"key": "userId"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"errorMessage\": \"et proident nostrud\",\n \"errorCode\": -53288614\n}"
				}
			]
		},
		{
			"name": "Get Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//console.log(\"Request sent: \" ,pm.request.body.raw);\r",
							"console.log(\"Response received: \" ,responseBody);\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"users\");\r",
							"    pm.expect(pm.response.text()).to.include(\"name\");\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"    pm.expect(pm.response.text()).to.include(\"GUID\");\r",
							"    pm.expect(pm.response.text()).to.include(\"email\");\r",
							"    pm.expect(pm.response.text()).to.include(\"fullName\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body contains new users\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.include(pm.environment.get(\"PAPIuser1Name\"));\r",
							"    pm.expect(pm.response.text()).to.not.include(pm.environment.get(\"PAPIuser2Name\"));\r",
							"    pm.expect(pm.response.text()).to.not.include(pm.environment.get(\"PAPIuser3Name\"));\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "authtoken",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "mode",
						"value": "EdgeMode"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/user",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							},
							{
								"key": "mode",
								"value": "sed proident in"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"users\": [\n  {\n   \"name\": \"et sunt adipisicing sint\",\n   \"id\": 68516075,\n   \"GUID\": \"sed in eiusmod\",\n   \"email\": \"cupidatat dolore reprehenderit\",\n   \"fullName\": \"deserunt Excepteur voluptate\",\n   \"plan\": {\n    \"id\": -31664109,\n    \"name\": \"cupidatat\"\n   }\n  },\n  {\n   \"name\": \"fugiat in\",\n   \"id\": 4314592,\n   \"GUID\": \"nostrud deserunt sed\",\n   \"email\": \"aute fugiat incididunt dolor\",\n   \"fullName\": \"dolor reprehenderit anim\",\n   \"plan\": {\n    \"id\": 6626922,\n    \"name\": \"eu\"\n   }\n  }\n ]\n}"
				},
				{
					"name": "Requested Details not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authtoken",
								"value": "<API Key>",
								"description": "Added as a part of security scheme: apikey"
							},
							{
								"key": "mode",
								"value": "sed proident in"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	]
}