{
	"info": {
		"_postman_id": "65b9b0b5-86b8-48ea-9850-cf4dae27a05f",
		"name": "PAPI -- EmailServer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4331195"
	},
	"item": [
		{
			"name": "0 - Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Request sent: \" ,pm.request.body.raw);",
							"console.log(\"Response received: \" ,responseBody);",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"Token\", jsonData.token);",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;            //validate status code",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept-Charset",
						"value": "utf-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n    \"mode\":4,\r\n    \"domain\":\"\",\r\n    \"username\":\"{{UserName}}\",\r\n    \"password\":\"{{Password}}\",\r\n    \"commserver\":\"\"\r\n    \r\n}"
				},
				"url": {
					"raw": "{{ServerURL}}/Login",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Login"
					]
				}
			},
			"response": [
				{
					"name": "Login",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n    \"mode\":4,\r\n    \"domain\":\"\",\r\n    \"username\":\"{{UserName}}\",\r\n    \"password\":\"{{Password}}\",\r\n    \"commserver\":\"\"\r\n    \r\n}"
						},
						"url": {
							"raw": "{{ServerURL}}/Login",
							"host": [
								"{{ServerURL}}"
							],
							"path": [
								"Login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "private"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Content-Type",
							"value": "application/json;charset=utf-8"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/8.5"
						},
						{
							"key": "Server",
							"value": "Kestrel"
						},
						{
							"key": "WEBSERVERCORE-FLAG",
							"value": "true"
						},
						{
							"key": "X-Powered-By",
							"value": "ASP.NET"
						},
						{
							"key": "X-Powered-By",
							"value": "ASP.NET"
						},
						{
							"key": "X-AspNet-Version",
							"value": "4.0.30319"
						},
						{
							"key": "Date",
							"value": "Mon, 21 Oct 2019 11:34:53 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"aliasName\": \"1\",\n    \"userGUID\": \"80ECA8AB-E88E-4B71-A5BE-233932068CC2\",\n    \"loginAttempts\": 0,\n    \"remainingLockTime\": 0,\n    \"smtpAddress\": \"####\",\n    \"userName\": \"####\",\n    \"providerType\": 1,\n    \"ccn\": 0,\n    \"token\": \"QSDK ####\",\n    \"capability\": 4328650366975,\n    \"forcePasswordChange\": false,\n    \"isAccountLocked\": false,\n    \"ownerOrganization\": {\n        \"providerId\": 0,\n        \"GUID\": \"95189d4e-4a7f-4cb3-969f-80d5871ac13f\",\n        \"providerDomainName\": \"Commcell\"\n    },\n    \"providerOrganization\": {\n        \"providerId\": 0,\n        \"GUID\": \"95189d4e-4a7f-4cb3-969f-80d5871ac13f\",\n        \"providerDomainName\": \"Commcell\"\n    },\n    \"errList\": []\n}"
				}
			]
		},
		{
			"name": "Get Email Server",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//console.log(\"Request sent: \" ,pm.request.body.raw);\r",
							"console.log(\"Response received: \" ,responseBody);\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.environment.set(\"SMTPServerName\", jsonData.SMTPServerName);\r",
							"pm.environment.set(\"SMTPPort\", jsonData.SMTPPort);\r",
							"pm.environment.set(\"senderEmail\", jsonData.senderEmail);\r",
							"pm.environment.set(\"senderName\", jsonData.senderName);\r",
							"pm.environment.set(\"encryptionAlgorithm\", jsonData.encryptionAlgorithm);\r",
							"pm.environment.set(\"useAuthentication\", jsonData.useAuthentication);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "authtoken",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/EmailServer",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"EmailServer"
					]
				}
			},
			"response": [
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authtoken",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/EmailServer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"EmailServer"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "OK",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authtoken",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/EmailServer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"EmailServer"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"SMTPServerName\": \"### ea\",\n \"SMTPPort\": 30971555,\n \"senderEmail\": \"sunt deserunt\",\n \"senderName\": \"commodo irure\",\n \"encryptionAlgorithm\": \"NONE\",\n \"useAuthentication\": false,\n \"username\": \"occaecat magna consectetur veniam\"\n}"
				}
			]
		},
		{
			"name": "Configure Email Server",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Request sent: \" ,pm.request.body.raw);\r",
							"console.log(\"Response received: \" ,responseBody);\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Validate errorCode and errorMessage\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.errorCode).to.eql(0);\r",
							"    pm.expect(jsonData.errorMessage).to.eql(\"\");\r",
							"    \r",
							"    \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "authtoken",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"SMTPServerName\": \"{{smtpHostname}}\",\n    \"SMTPPort\": 25,\n    \"senderEmail\": \"Commvault@PAPItesting.com\",\n    \"senderName\": \"PAPI\",\n    \"encryptionAlgorithm\": \"NONE\",\n    \"username\": \"\",\n    \"password\": \"\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/EmailServer",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"EmailServer"
					]
				}
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authtoken",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"SMTPServerName\": \"####\",\n    \"SMTPPort\": 89915017,\n    \"senderEmail\": \"reprehenderit\",\n    \"senderName\": \"ut irure amet id Lorem\",\n    \"encryptionAlgorithm\": \"NONE\",\n    \"username\": \"reprehenderit Excepteur\",\n    \"password\": \"in consectetur sed non eiusmod\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/EmailServer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"EmailServer"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"errorMessage\": \"in\",\n \"errorCode\": 81529131\n}"
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authtoken",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"SMTPServerName\": \"#### \",\n    \"SMTPPort\": 89915017,\n    \"senderEmail\": \"reprehenderit\",\n    \"senderName\": \"ut irure amet id Lorem\",\n    \"encryptionAlgorithm\": \"NONE\",\n    \"username\": \"reprehenderit Excepteur\",\n    \"password\": \"in consectetur sed non eiusmod\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/EmailServer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"EmailServer"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authtoken",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"SMTPServerName\": \"###\",\n    \"SMTPPort\": 89915017,\n    \"senderEmail\": \"reprehenderit\",\n    \"senderName\": \"ut irure amet id Lorem\",\n    \"encryptionAlgorithm\": \"NONE\",\n    \"username\": \"reprehenderit Excepteur\",\n    \"password\": \"in consectetur sed non eiusmod\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/EmailServer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"EmailServer"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Get Email Server",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//console.log(\"Request sent: \" ,pm.request.body.raw);\r",
							"console.log(\"Response received: \" ,responseBody);\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validate response body\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"PAPI\");\r",
							"    pm.expect(pm.response.text()).to.include(\"commvault.com\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "authtoken",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/EmailServer",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"EmailServer"
					]
				}
			},
			"response": []
		},
		{
			"name": "Send Test Mail Req",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Request sent: \" ,pm.request.body.raw);\r",
							"console.log(\"Response received: \" ,responseBody);\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validate errorCode and errorMessage\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.errorCode).to.eql(0);\r",
							"    pm.expect(jsonData.errorMessage).to.eql(\"Mail sent successfully.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "authtoken",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"SMTPServerName\": \"{{smtpHostname}}\",\n    \"SMTPPort\": 25,\n    \"senderEmail\": \"Commvault@PAPItesting.com\",\n    \"senderName\": \"PAPI\",\n    \"encryptionAlgorithm\": \"NONE\",\n    \"useAuthentication\": false,\n    \"username\": \"\",\n    \"password\": \"\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/EmailServer/Action/Test",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"EmailServer",
						"Action",
						"Test"
					]
				}
			},
			"response": [
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authtoken",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"SMTPServerName\": \"###\",\n    \"SMTPPort\": -21708465,\n    \"senderEmail\": \"sint sunt am\",\n    \"senderName\": \"tempor ex sit\",\n    \"encryptionAlgorithm\": \"NONE\",\n    \"useAuthentication\": true,\n    \"username\": \"minim laborum aliqua voluptate\",\n    \"password\": \"consectetur Excepteur\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/EmailServer/Action/Test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"EmailServer",
								"Action",
								"Test"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "OK",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authtoken",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"SMTPServerName\": \"####\",\n    \"SMTPPort\": -21708465,\n    \"senderEmail\": \"sint sunt am\",\n    \"senderName\": \"tempor ex sit\",\n    \"encryptionAlgorithm\": \"NONE\",\n    \"useAuthentication\": true,\n    \"username\": \"minim laborum aliqua voluptate\",\n    \"password\": \"consectetur Excepteur\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/EmailServer/Action/Test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"EmailServer",
								"Action",
								"Test"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"errorMessage\": \"in\",\n \"errorCode\": 81529131\n}"
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authtoken",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"SMTPServerName\": \"sint non sunt\",\n    \"SMTPPort\": -21708465,\n    \"senderEmail\": \"sint sunt am\",\n    \"senderName\": \"tempor ex sit\",\n    \"encryptionAlgorithm\": \"NONE\",\n    \"useAuthentication\": true,\n    \"username\": \"minim laborum aliqua voluptate\",\n    \"password\": \"consectetur Excepteur\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/EmailServer/Action/Test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"EmailServer",
								"Action",
								"Test"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Update Email Server",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Request sent: \" ,pm.request.body.raw);\r",
							"console.log(\"Response received: \" ,responseBody);\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validate errorCode and errorMessage\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.errorCode).to.eql(0);\r",
							"    pm.expect(jsonData.errorMessage).to.eql(\"\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "authtoken",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"SMTPServerName\": \"\",\n    \"SMTPPort\": {{SMTPPort}},\n    \"senderEmail\": \"{{senderEmail}}\",\n    \"senderName\": \"{{senderName}}\",\n    \"encryptionAlgorithm\": \"NONE\",\n    \"useAuthentication\": {{useAuthentication}},\n    \"username\": \"\",\n    \"password\": \"\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/EmailServer",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"EmailServer"
					]
				}
			},
			"response": [
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authtoken",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"SMTPServerName\": \"in\",\n    \"SMTPPort\": -78561097,\n    \"senderEmail\": \"proident fugiat\",\n    \"senderName\": \"Excepteur Ut cupidatat\",\n    \"encryptionAlgorithm\": \"NONE\",\n    \"useAuthentication\": false,\n    \"username\": \"aute sit\",\n    \"password\": \"ipsum enim\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/EmailServer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"EmailServer"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "OK",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authtoken",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"SMTPServerName\": \"in\",\n    \"SMTPPort\": -78561097,\n    \"senderEmail\": \"proident fugiat\",\n    \"senderName\": \"Excepteur Ut cupidatat\",\n    \"encryptionAlgorithm\": \"NONE\",\n    \"useAuthentication\": false,\n    \"username\": \"aute sit\",\n    \"password\": \"ipsum enim\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/EmailServer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"EmailServer"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"errorMessage\": \"in\",\n \"errorCode\": 81529131\n}"
				},
				{
					"name": "Unauthorized",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "Authtoken",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"SMTPServerName\": \"in\",\n    \"SMTPPort\": -78561097,\n    \"senderEmail\": \"proident fugiat\",\n    \"senderName\": \"Excepteur Ut cupidatat\",\n    \"encryptionAlgorithm\": \"NONE\",\n    \"useAuthentication\": false,\n    \"username\": \"aute sit\",\n    \"password\": \"ipsum enim\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/EmailServer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"EmailServer"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Get Email Server",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//console.log(\"Request sent: \" ,pm.request.body.raw);\r",
							"console.log(\"Response received: \" ,responseBody);\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    \r",
							"    pm.expect(pm.response.text()).to.not.include(\"Commvault@PAPItesting.com\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{Token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "authtoken",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/EmailServer",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"EmailServer"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "SMTPServerName",
			"value": ""
		},
		{
			"key": "SMTPPort",
			"value": ""
		},
		{
			"key": "senderEmail",
			"value": ""
		},
		{
			"key": "senderName",
			"value": ""
		},
		{
			"key": "encryptionAlgorithm",
			"value": ""
		},
		{
			"key": "useAuthentication",
			"value": ""
		}
	]
}