{
	"info": {
		"_postman_id": "33f030ed-fd61-4495-b52d-70a8ebc82c1c",
		"name": "CredentialsManagerOperations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31953132"
		},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"Token\", jsonData.token);",
							"",
							"",
							"",
							"",
							"",
							"console.log(postman.getResponseHeader(\"Content-Type\"));",
							"console.log(postman.getEnvironmentVariable(\"Token\"));",
							"",
							"",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;            //validate status code",
							"",
							"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
							"",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");     //validate content-type",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n    \"mode\":4,\r\n    \"domain\":\"\",\r\n    \"username\":\"{{UserName}}\",\r\n    \"password\":\"{{Password}}\",\r\n    \"commserver\":\"\"\r\n}"
				},
				"url": {
					"raw": "{{ServerURL}}/Login",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Login"
					]
				}
			},
			"response": [
				{
					"name": "Login",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n    \"mode\":4,\r\n    \"domain\":\"\",\r\n    \"username\":\"{{UserName}}\",\r\n    \"password\":\"{{Password}}\",\r\n    \"commserver\":\"\"\r\n}"
						},
						"url": {
							"raw": "{{ServerURL}}/Login",
							"host": [
								"{{ServerURL}}"
							],
							"path": [
								"Login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json;charset=utf-8"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/8.5"
						},
						{
							"key": "X-Powered-By",
							"value": "ASP.NET"
						},
						{
							"key": "Date",
							"value": "Mon, 17 Dec 2018 10:17:29 GMT"
						},
						{
							"key": "Content-Length",
							"value": "1022"
						}
					],
					"cookie": [],
					"body": "{\n    \"aliasName\": \"1\",\n    \"userGUID\": \"80ECA8AB-E88E-4B71-A5BE-233932068CC2\",\n    \"loginAttempts\": 0,\n    \"remainingLockTime\": 0,\n    \"smtpAddress\": \"####\",\n    \"userName\": \"####\",\n    \"providerType\": 1,\n    \"ccn\": 0,\n    \"token\": \"QSDK ....\",\n    \"capability\": 4328650366975,\n    \"forcePasswordChange\": false,\n    \"isAccountLocked\": false,\n    \"ownerOrganization\": {\n        \"providerId\": 0,\n        \"providerDomainName\": \"####\"\n    },\n    \"providerOrganization\": {\n        \"providerId\": 0,\n        \"providerDomainName\": \"######\"\n    },\n    \"errList\": []\n}"
				}
			]
		},
		{
			"name": "Credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"console.log(\"Response received:\", jsonData);",
							"",
							"if((tests[\"Validating if Status code is 200\"] = responseCode.code === 200))",
							"    console.log(\"Status code 200 validated\");",
							"",
							"",
							"if((tests[\"Validating error code\"] = jsonData.error.errorCode === 0))",
							"    console.log(\"Error code returned is 0\");",
							"    ",
							"if((tests[\"Validating error message\"] = jsonData.error.errorMessage === \"\"))",
							"    console.log(\"Error message returned is ''\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{ServerURL}}/Commcell/Credentials",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Commcell",
						"Credentials"
					]
				}
			},
			"response": [
				{
					"name": "Credentials",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authtoken",
								"value": "{{Token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ServerURL}}/Commcell/Credentials",
							"host": [
								"{{ServerURL}}"
							],
							"path": [
								"Commcell",
								"Credentials"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json;charset=utf-8"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/8.5"
						},
						{
							"key": "X-Powered-By",
							"value": "ASP.NET"
						},
						{
							"key": "Date",
							"value": "Mon, 17 Dec 2018 10:17:38 GMT"
						},
						{
							"key": "Content-Length",
							"value": "47"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"errorMessage\": \"\",\n        \"errorCode\": 0\n    }\n}"
				}
			]
		},
		{
			"name": "Credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"console.log(\"Response received:\", jsonData);",
							"",
							"if((tests[\"Validating if Status code is 200\"] = responseCode.code == 200))",
							"    console.log(\"Status code 200 validated\");",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"postman.setEnvironmentVariable(\"credentialName\",\"Test\" + new Date().getTime());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"credentialRecordInfo\": [\n        {\n            \"recordType\": 1,\n            \"description\": \"Test credential manager\",\n            \"additionalInformation\": {\n                \"dbName\": \"\",\n                \"connectString\": \"\",\n                \"azureCredInfo\": {\n                    \"environment\": \"\",\n                    \"tenantId\": \"\",\n                    \"applicationId\": \"\",\n                    \"subscriptionId\": \"\"\n                }\n            },\n            \"securityAssociations\": {\n                \"associationsOperationType\": 1,\n                \"associations\": [\n                    {\n                        \"userOrGroup\": [\n                            {\n                                \"entityTypeName\": \"USERGROUP_ENTITY\",\n                                \"userGroupName\": \"master\",\n                                \"userGroupId\": 1\n                                \n                            }\n                        ]\n                    }\n                ]\n            },\n            \"credentialRecord\": {\n                \n                \"credentialName\": \"{{credentialName}}\"\n            },\n            \"record\": {\n                \"password\": \"{{Password}}\",\n                \"userName\": \"{{UserName}}\"\n            },\n            \"createAs\": {\n                \"user\": {},\n                \"userGroup\": {\n                    \"userGroupId\": 1,\n                    \n                    \"userGroupName\": \"master\"\n                }\n            }\n        }\n    ]\n}"
				},
				"url": {
					"raw": "{{ServerURL}}/Commcell/Credentials",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Commcell",
						"Credentials"
					]
				}
			},
			"response": [
				{
					"name": "Credentials",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authtoken",
								"value": "{{Token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"credentialRecordInfo\": [\n        {\n            \"recordType\": 1,\n            \"description\": \"Test credential manager\",\n            \"additionalInformation\": {\n                \"dbName\": \"\",\n                \"connectString\": \"\",\n                \"azureCredInfo\": {\n                    \"environment\": \"\",\n                    \"tenantId\": \"\",\n                    \"applicationId\": \"\",\n                    \"subscriptionId\": \"\"\n                }\n            },\n            \"securityAssociations\": {\n                \"associationsOperationType\": 1,\n                \"associations\": [\n                    {\n                        \"userOrGroup\": [\n                            {\n                                \"entityTypeName\": \"USERGROUP_ENTITY\",\n                                \"userGroupName\": \"master\",\n                                \"userGroupId\": 1\n                                \n                            }\n                        ]\n                    }\n                ]\n            },\n            \"credentialRecord\": {\n                \n                \"credentialName\": \"Test\"\n            },\n            \"record\": {\n                \"password\": \"\",\n                \"userName\": \"\"\n            },\n            \"createAs\": {\n                \"user\": {},\n                \"userGroup\": {\n                    \"userGroupId\": 1,\n                    \n                    \"userGroupName\": \"master\"\n                }\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{ServerURL}}/Commcell/Credentials",
							"host": [
								"{{ServerURL}}"
							],
							"path": [
								"Commcell",
								"Credentials"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json;charset=utf-8"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/8.5"
						},
						{
							"key": "X-Powered-By",
							"value": "ASP.NET"
						},
						{
							"key": "Date",
							"value": "Mon, 17 Dec 2018 10:17:47 GMT"
						},
						{
							"key": "Content-Length",
							"value": "4"
						}
					],
					"cookie": [],
					"body": "{}"
				}
			]
		},
		{
			"name": "Created Credentials info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"console.log(\"Response received:\", jsonData);",
							"",
							"if((tests[\"Validating if status code is 200\"] = responseCode.code === 200))",
							"    console.log(\"Status code 200 validated\");",
							"",
							"if((tests[\"Validating credentialRecordInfo tag\"] = responseBody.has(\"credentialRecordInfo\")))      ",
							"        console.log(\"credentialRecordInfo tag is present\");",
							"        ",
							"if((tests[\"Validating recordType tag\"] = responseBody.has(\"recordType\")))      ",
							"        console.log(\"recordType is present\");",
							"        ",
							"if((tests[\"Validating description tag\"] = responseBody.has(\"description\")))      ",
							"        console.log(\"description tag is present\");",
							"        ",
							"if((tests[\"Validating credentialRecord tag\"] = responseBody.has(\"credentialRecord\")))      ",
							"        console.log(\"credentialRecord tag is present\");",
							"",
							"if((tests[\"Validating credentialId tag\"] = responseBody.has(\"credentialId\")))      ",
							"        console.log(\"credentialId tag is present\");",
							"        ",
							"if((tests[\"Validating credentialName tag\"] = responseBody.has(\"credentialName\")))      ",
							"        console.log(\"credentialName tag is present\");",
							"",
							"",
							"if((tests[\"Validating error code\"] = jsonData.error.errorCode === 0))",
							"    console.log(\"Error code returned is 0\");",
							"    ",
							"if((tests[\"Validating error message\"] = jsonData.error.errorMessage === \"\"))",
							"    console.log(\"Error message returned is ''\");",
							"var index;  ",
							"for (index=0;  index<jsonData.credentialRecordInfo.length; index++)",
							"{",
							"    if (jsonData.credentialRecordInfo[index].credentialRecord.credentialName == pm.environment.get(\"credentialName\"))",
							"    {",
							"        tests[\"Validating description\"] = jsonData.credentialRecordInfo[index].description === \"Test credential manager\";",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{ServerURL}}/Commcell/Credentials",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Commcell",
						"Credentials"
					]
				}
			},
			"response": [
				{
					"name": "Created Credentials info",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authtoken",
								"value": "{{Token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ServerURL}}/Commcell/Credentials",
							"host": [
								"{{ServerURL}}"
							],
							"path": [
								"Commcell",
								"Credentials"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json;charset=utf-8"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/8.5"
						},
						{
							"key": "X-Powered-By",
							"value": "ASP.NET"
						},
						{
							"key": "Date",
							"value": "Mon, 17 Dec 2018 10:17:53 GMT"
						},
						{
							"key": "Content-Length",
							"value": "198"
						}
					],
					"cookie": [],
					"body": "{\n    \"credentialRecordInfo\": [\n        {\n            \"recordType\": 1,\n            \"description\": \"Test credential manager\",\n            \"credentialRecord\": {\n                \"credentialId\": 10,\n                \"credentialName\": \"Test\"\n            }\n        }\n    ],\n    \"error\": {\n        \"errorMessage\": \"\",\n        \"errorCode\": 0\n    }\n}"
				}
			]
		},
		{
			"name": "Credentials with more details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"console.log(\"Response received:\", jsonData);",
							"",
							"if((tests[\"Validating if Status code is 200\"] = responseCode.code === 200))",
							"    console.log(\"Status code 200 validated\");",
							"",
							"if((tests[\"Validating credentialRecordInfo tag\"] = responseBody.has(\"credentialRecordInfo\")))      ",
							"        console.log(\"credentialRecordInfo tag is present\");",
							"        ",
							"if((tests[\"Validating recordType tag\"] = responseBody.has(\"recordType\")))      ",
							"        console.log(\"recordType tag is present\");",
							"        ",
							"if((tests[\"Validating description tag\"] = responseBody.has(\"description\")))      ",
							"        console.log(\"description tag is present\");",
							"        ",
							"if((tests[\"Validating credentialRecord tag\"] = responseBody.has(\"credentialRecord\")))      ",
							"        console.log(\"credentialRecord tag is present\");",
							"",
							"if((tests[\"Validating credentialId tag\"] = responseBody.has(\"credentialId\")))      ",
							"        console.log(\"credentialId tag is present\");",
							"        ",
							"if((tests[\"Validating credentialName tag\"] = responseBody.has(\"credentialName\")))      ",
							"        console.log(\"credentialName tag is present\");",
							"        ",
							"",
							"if((tests[\"Validating additionalInformation tag\"] = responseBody.has(\"additionalInformation\")))      ",
							"        console.log(\"additionalInformation tag is present\");",
							"        ",
							"if((tests[\"Validating securityAssociations tag\"] = responseBody.has(\"securityAssociations\")))      ",
							"        console.log(\"securityAssociations tag is present\");",
							"",
							"if((tests[\"Validating flags tag\"] = responseBody.has(\"flags\")))      ",
							"        console.log(\"flags tag is present\");",
							"",
							"if((tests[\"Validating error code\"] = jsonData.error.errorCode === 0))",
							"    console.log(\"Error code returned is 0\");",
							"    ",
							"if((tests[\"Validating error message\"] = jsonData.error.errorMessage === \"\"))",
							"    console.log(\"Error message returned is ''\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{ServerURL}}/CommCell/Credentials?propertyLevel=30",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"CommCell",
						"Credentials"
					],
					"query": [
						{
							"key": "propertyLevel",
							"value": "30"
						}
					]
				}
			},
			"response": [
				{
					"name": "Credentials with more details",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authtoken",
								"value": "{{Token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ServerURL}}/CommCell/Credentials?propertyLevel=30",
							"host": [
								"{{ServerURL}}"
							],
							"path": [
								"CommCell",
								"Credentials"
							],
							"query": [
								{
									"key": "propertyLevel",
									"value": "30"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json;charset=utf-8"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/8.5"
						},
						{
							"key": "X-Powered-By",
							"value": "ASP.NET"
						},
						{
							"key": "Date",
							"value": "Mon, 17 Dec 2018 10:18:06 GMT"
						},
						{
							"key": "Content-Length",
							"value": "849"
						}
					],
					"cookie": [],
					"body": "{\n    \"credentialRecordInfo\": [\n        {\n            \"recordType\": 1,\n            \"description\": \"Test credential manager\",\n            \"createdTime\": 1545041867,\n            \"additionalInformation\": {\n                \"dbName\": \"\",\n                \"connectString\": \"\",\n                \"azureCredInfo\": {\n                    \"environment\": \"\",\n                    \"tenantId\": \"\",\n                    \"applicationId\": \"\",\n                    \"subscriptionId\": \"\"\n                }\n            },\n            \"securityAssociations\": {\n                \"associations\": [\n                    {\n                        \"userOrGroup\": [\n                            {\n                                \"userGroupName\": \"master\",\n                                \"userGroupId\": 1,\n                                \"_type_\": 15\n                            }\n                        ],\n                        \"properties\": {\n                            \"isCreatorAssociation\": true,\n                            \"categoryPermission\": {}\n                        }\n                    }\n                ],\n                \"ownerAssociations\": {}\n            },\n            \"credentialRecord\": {\n                \"credentialId\": 10,\n                \"credentialName\": \"Test\"\n            },\n            \"record\": {\n                \"userName\": \"####\"\n            },\n            \"flags\": {\n                \"hasAzureKeyVaultAccess\": false,\n                \"isWorkflowRecord\": false,\n                \"hasAzureKeyVaultStorageAccess\": false,\n                \"hasAzureRSVAccess\": false\n            },\n            \"createAs\": {\n                \"userGroup\": {\n                    \"userGroupId\": 1,\n                    \"_type_\": 15,\n                    \"userGroupName\": \"####\"\n                }\n            }\n        }\n    ],\n    \"error\": {\n        \"errorMessage\": \"\",\n        \"errorCode\": 0\n    }\n}"
				}
			]
		},
		{
			"name": "Credentials using name",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"console.log(\"Response received:\", jsonData);",
							"",
							"if((tests[\"Validating if Status code is 200\"] = responseCode.code === 200))",
							"    console.log(\"Status code 200 validated\");",
							"",
							"if((tests[\"Validating credentialRecordInfo tag\"] = responseBody.has(\"credentialRecordInfo\")))      ",
							"        console.log(\"credentialRecordInfo tag is present\");",
							"        ",
							"if((tests[\"Validating recordType tag\"] = responseBody.has(\"recordType\")))      ",
							"        console.log(\"recordType tag is present\");",
							"        ",
							"if((tests[\"Validating description tag\"] = responseBody.has(\"description\")))      ",
							"        console.log(\"description tag is present\");",
							"        ",
							"if((tests[\"Validating credentialRecord tag\"] = responseBody.has(\"credentialRecord\")))      ",
							"        console.log(\"credentialRecord tag is present\");",
							"",
							"if((tests[\"Validating credentialId tag\"] = responseBody.has(\"credentialId\")))      ",
							"        console.log(\"credentialId tag is present\");",
							"        ",
							"if((tests[\"Validating credentialName tag\"] = responseBody.has(\"credentialName\")))      ",
							"        console.log(\"credentialName tag is present\");",
							"",
							"",
							"if((tests[\"Validating error code\"] = jsonData.error.errorCode === 0))",
							"    console.log(\"Error code returned is 0\");",
							"    ",
							"if((tests[\"Validating error message\"] = jsonData.error.errorMessage === \"\"))",
							"    console.log(\"Error message returned is ''\");",
							"    ",
							"if((tests[\"Validating credential name\"] = jsonData.credentialRecordInfo[0].credentialRecord.credentialName === postman.getEnvironmentVariable(\"credentialName\")))",
							"        console.log(\"credential name validated\");",
							"        ",
							"if((tests[\"Validating description\"] = jsonData.credentialRecordInfo[0].description === \"Test credential manager\"))",
							"        console.log(\"credential description validated\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{ServerURL}}/CommCell/Credentials/{{credentialName}}",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"CommCell",
						"Credentials",
						"{{credentialName}}"
					]
				}
			},
			"response": [
				{
					"name": "Credentials using name",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authtoken",
								"value": "{{Token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ServerURL}}/CommCell/Credentials/{{credentialName}}",
							"host": [
								"{{ServerURL}}"
							],
							"path": [
								"CommCell",
								"Credentials",
								"{{credentialName}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json;charset=utf-8"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/8.5"
						},
						{
							"key": "X-Powered-By",
							"value": "ASP.NET"
						},
						{
							"key": "Date",
							"value": "Mon, 17 Dec 2018 10:18:12 GMT"
						},
						{
							"key": "Content-Length",
							"value": "198"
						}
					],
					"cookie": [],
					"body": "{\n    \"credentialRecordInfo\": [\n        {\n            \"recordType\": 1,\n            \"description\": \"Test credential manager\",\n            \"credentialRecord\": {\n                \"credentialId\": 10,\n                \"credentialName\": \"Test\"\n            }\n        }\n    ],\n    \"error\": {\n        \"errorMessage\": \"\",\n        \"errorCode\": 0\n    }\n}"
				}
			]
		},
		{
			"name": "Update Credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"console.log(\"Response received:\", jsonData);",
							"",
							"if((tests[\"Validating if Status code is 200\"] = responseCode.code == 200))",
							"    console.log(\"Status code 200 validated\");",
							"    ",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"credentialRecordInfo\": [\n        {\n            \"recordType\": 1,\n            \"description\": \"Test credential manager edit\",\n            \"additionalInformation\": {\n                \"dbName\": \"\",\n                \"connectString\": \"\",\n                \"azureCredInfo\": {\n                    \"environment\": \"\",\n                    \"tenantId\": \"\",\n                    \"applicationId\": \"\",\n                    \"subscriptionId\": \"\"\n                }\n            },\n            \"securityAssociations\": {\n                \"associationsOperationType\": 1,\n                \"associations\": [\n                    {\n                        \"userOrGroup\": [\n                            {\n                                \"entityTypeName\": \"USERGROUP_ENTITY\",\n                                \"userGroupName\": \"master\",\n                                \"userGroupId\": 1,\n                                \"_type_\": 15\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"credentialRecord\": {\n                \"credentialName\": \"{{credentialName}}\"\n            },\n            \"record\": {\n                \"userName\": \"####\"\n            },\n            \"createAs\": {\n                \"user\": {},\n                \"userGroup\": {\n                    \"userGroupId\": 1,\n                    \"_type_\": 15,\n                    \"userGroupName\": \"master\"\n                }\n            }\n        }\n    ]\n}"
				},
				"url": {
					"raw": "{{ServerURL}}/Commcell/Credentials",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Commcell",
						"Credentials"
					]
				}
			},
			"response": [
				{
					"name": "Update Credentials",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authtoken",
								"value": "{{Token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"credentialRecordInfo\": [\n        {\n            \"recordType\": 1,\n            \"description\": \"Test credential manager edit\",\n            \"additionalInformation\": {\n                \"dbName\": \"\",\n                \"connectString\": \"\",\n                \"azureCredInfo\": {\n                    \"environment\": \"\",\n                    \"tenantId\": \"\",\n                    \"applicationId\": \"\",\n                    \"subscriptionId\": \"\"\n                }\n            },\n            \"securityAssociations\": {\n                \"associationsOperationType\": 1,\n                \"associations\": [\n                    {\n                        \"userOrGroup\": [\n                            {\n                                \"entityTypeName\": \"USERGROUP_ENTITY\",\n                                \"userGroupName\": \"master\",\n                                \"userGroupId\": 1,\n                                \"_type_\": 15\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"credentialRecord\": {\n                \"credentialName\": \"Test\"\n            },\n            \"record\": {\n                \"userName\": \"####\"\n            },\n            \"createAs\": {\n                \"user\": {},\n                \"userGroup\": {\n                    \"userGroupId\": 1,\n                    \"_type_\": 15,\n                    \"userGroupName\": \"master\"\n                }\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{ServerURL}}/Commcell/Credentials",
							"host": [
								"{{ServerURL}}"
							],
							"path": [
								"Commcell",
								"Credentials"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json;charset=utf-8"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/8.5"
						},
						{
							"key": "X-Powered-By",
							"value": "ASP.NET"
						},
						{
							"key": "Date",
							"value": "Mon, 17 Dec 2018 10:18:22 GMT"
						},
						{
							"key": "Content-Length",
							"value": "4"
						}
					],
					"cookie": [],
					"body": "{}"
				}
			]
		},
		{
			"name": "Validate edit",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"console.log(\"Response received:\", jsonData);",
							"",
							"if((tests[\"Validating if Status code is 200\"] = responseCode.code === 200))",
							"    console.log(\"Status code 200 validated\");",
							"",
							"if((tests[\"Validating credentialRecordInfo tag\"] = responseBody.has(\"credentialRecordInfo\")))      ",
							"        console.log(\"credentialRecordInfo tag is present\");",
							"        ",
							"if((tests[\"Validating recordType tag\"] = responseBody.has(\"recordType\")))      ",
							"        console.log(\"recordType tag is present\");",
							"        ",
							"if((tests[\"Validating description tag\"] = responseBody.has(\"description\")))      ",
							"        console.log(\"description tag is present\");",
							"        ",
							"if((tests[\"Validating credentialRecord tag\"] = responseBody.has(\"credentialRecord\")))      ",
							"        console.log(\"credentialRecord tag is present\");",
							"",
							"if((tests[\"Validating credentialId tag\"] = responseBody.has(\"credentialId\")))      ",
							"        console.log(\"credentialId tag is present\");",
							"        ",
							"if((tests[\"Validating credentialName tag\"] = responseBody.has(\"credentialName\")))      ",
							"        console.log(\"credentialName tag is present\");",
							"",
							"",
							"if((tests[\"Validating error code\"] = jsonData.error.errorCode === 0))",
							"    console.log(\"Error code returned is 0\");",
							"    ",
							"if((tests[\"Validating error message\"] = jsonData.error.errorMessage === \"\"))",
							"    console.log(\"Error message returned is ''\");",
							"    ",
							"if((tests[\"Validating credential name\"] = jsonData.credentialRecordInfo[0].credentialRecord.credentialName === postman.getEnvironmentVariable(\"credentialName\")))",
							"        console.log(\"credential name validated\");",
							"        ",
							"if((tests[\"Validating  if description was modified\"] = jsonData.credentialRecordInfo[0].description === \"Test credential manager edit\"))",
							"        console.log(\"credential description validated\");",
							"        ",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{ServerURL}}/CommCell/Credentials/{{credentialName}}",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"CommCell",
						"Credentials",
						"{{credentialName}}"
					]
				}
			},
			"response": [
				{
					"name": "Validate edit",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authtoken",
								"value": "{{Token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ServerURL}}/CommCell/Credentials/{{credentialName}}",
							"host": [
								"{{ServerURL}}"
							],
							"path": [
								"CommCell",
								"Credentials",
								"{{credentialName}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json;charset=utf-8"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/8.5"
						},
						{
							"key": "X-Powered-By",
							"value": "ASP.NET"
						},
						{
							"key": "Date",
							"value": "Mon, 17 Dec 2018 10:18:28 GMT"
						},
						{
							"key": "Content-Length",
							"value": "203"
						}
					],
					"cookie": [],
					"body": "{\n    \"credentialRecordInfo\": [\n        {\n            \"recordType\": 1,\n            \"description\": \"Test credential manager edit\",\n            \"credentialRecord\": {\n                \"credentialId\": 10,\n                \"credentialName\": \"Test\"\n            }\n        }\n    ],\n    \"error\": {\n        \"errorMessage\": \"\",\n        \"errorCode\": 0\n    }\n}"
				},
				{
					"name": "Validate edit",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authtoken",
								"value": "{{Token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ServerURL}}/CommCell/Credentials/{{credentialName}}",
							"host": [
								"{{ServerURL}}"
							],
							"path": [
								"CommCell",
								"Credentials",
								"{{credentialName}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json;charset=utf-8"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/8.5"
						},
						{
							"key": "X-Powered-By",
							"value": "ASP.NET"
						},
						{
							"key": "Date",
							"value": "Mon, 17 Dec 2018 10:18:38 GMT"
						},
						{
							"key": "Content-Length",
							"value": "203"
						}
					],
					"cookie": [],
					"body": "{\n    \"credentialRecordInfo\": [\n        {\n            \"recordType\": 1,\n            \"description\": \"Test credential manager edit\",\n            \"credentialRecord\": {\n                \"credentialId\": 10,\n                \"credentialName\": \"Test\"\n            }\n        }\n    ],\n    \"error\": {\n        \"errorMessage\": \"\",\n        \"errorCode\": 0\n    }\n}"
				}
			]
		},
		{
			"name": "Delete Credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"console.log(\"Response received:\", jsonData);",
							"",
							"if((tests[\"Validating if Status code is 200\"] = responseCode.code == 200))",
							"    console.log(\"Status code 200 validated\");",
							"    ",
							"if((tests[\"Validating error code\"] = jsonData.error.errorCode === 0))",
							"    console.log(\"Error code returned is 0\");",
							"    ",
							"if((tests[\"Validating error message\"] = jsonData.error.errorMessage === \"Successful!\"))",
							"    console.log(\"Error message returned is 'Successful!'\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"credentialRecordInfo\": [\n        {\n            \"recordType\": 1,\n            \"description\": \"\",\n            \"credentialRecord\": {\n                \n                \"credentialName\": \"{{credentialName}}\"\n            }\n        }\n    ]\n}"
				},
				"url": {
					"raw": "{{ServerURL}}/CommCell/Credentials/action/delete",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"CommCell",
						"Credentials",
						"action",
						"delete"
					]
				}
			},
			"response": [
				{
					"name": "Delete Credentials",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authtoken",
								"value": "{{Token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"credentialRecordInfo\": [\n        {\n            \"recordType\": 1,\n            \"description\": \"\",\n            \"credentialRecord\": {\n                \n                \"credentialName\": \"{{credentialName}}\"\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{ServerURL}}/CommCell/Credentials/action/delete",
							"host": [
								"{{ServerURL}}"
							],
							"path": [
								"CommCell",
								"Credentials",
								"action",
								"delete"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json;charset=utf-8"
						},
						{
							"key": "Server",
							"value": "Microsoft-IIS/8.5"
						},
						{
							"key": "X-Powered-By",
							"value": "ASP.NET"
						},
						{
							"key": "Date",
							"value": "Mon, 17 Dec 2018 10:17:11 GMT"
						},
						{
							"key": "Content-Length",
							"value": "58"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": {\n        \"errorMessage\": \"Successful!\",\n        \"errorCode\": 0\n    }\n}"
				}
			]
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Response received:\", responseBody);",
							"tests[\"Validating if Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"Validating if Status code name has string\"] = responseCode.name.has(\"OK\");",
							"",
							"if((tests[\"Validating Logout\"] = responseBody.has(\"User logged out\")));      ",
							"        console.log(\"Logout Validated\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{ServerURL}}/Logout",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Logout"
					]
				}
			},
			"response": []
		}
	]
}