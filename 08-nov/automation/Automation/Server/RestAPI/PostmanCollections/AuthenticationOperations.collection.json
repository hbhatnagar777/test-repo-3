{
	"info": {
		"_postman_id": "c51f3f88-dff7-4415-8e5c-f36c26f8325f",
		"name": "Authentication Operations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4331195"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"console.log(\"Response received:\", jsonData);",
							"postman.setEnvironmentVariable(\"Token\", jsonData.token);",
							"",
							"",
							"",
							"",
							"",
							"console.log(postman.getResponseHeader(\"Content-Type\"));",
							"console.log(postman.getEnvironmentVariable(\"Token\"));",
							"",
							"",
							"//tests[\"Validating if response time is less than 10000ms\"] = responseTime < postman.getEnvironmentVariable(\"ResponseTime\") ;   //validate response time",
							"",
							"tests[\"Validating if Status code is 200\"] = responseCode.code === 200;            ",
							"",
							"tests[\"Validating if Status code name has string\"] = responseCode.name.has(\"OK\");",
							"",
							"tests[\"Validating if Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");   "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n    \"mode\":\"{{Mode}}\",\r\n    \"domain\":\"\",\r\n    \"username\":\"{{UserName}}\",\r\n    \"password\":\"{{Password}}\",\r\n    \"commserver\":\"\"\r\n}"
				},
				"url": {
					"raw": "{{ServerURL}}/Login",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Two Factor Info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Validating if Status code is 200\"] = responseCode.code === 200;            ",
							"tests[\"Validating if Status code name has string\"] = responseCode.name.has(\"OK\");",
							"tests[\"Validating if Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
							"tests[\"Response Body contains twoFactorInfo\"] = responseBody.has(\"twoFactorInfo\");",
							"postman.setEnvironmentVariable(\"isTwoFactorAuthenticationEnabled\", jsonData.twoFactorInfo.isTwoFactorAuthenticationEnabled);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{ServerURL}}/Security/TwoFactorAuth/Status?username={{UserName}}",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Security",
						"TwoFactorAuth",
						"Status"
					],
					"query": [
						{
							"key": "username",
							"value": "{{UserName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Two Factor Pin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody)",
							"tests[\"Validating if Status code is 200\"] = responseCode.code === 200;            ",
							"tests[\"Validating if Status code name has string\"] = responseCode.name.has(\"OK\");",
							"tests[\"Validating if Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");  ",
							"var check= postman.getEnvironmentVariable(\"isTwoFactorAuthenticationEnabled\");",
							"console.log(check)",
							"if (check === false)",
							"{",
							"    tests[\"There is no pin\"] = responseBody.has(\"\");",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{ServerURL}}/Security/TwoFactorAuth/Pin?username={{UserName}}",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Security",
						"TwoFactorAuth",
						"Pin"
					],
					"query": [
						{
							"key": "username",
							"value": "{{UserName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Response received:\", responseBody);",
							"tests[\"Validating if Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"Validating if Status code name has string\"] = responseCode.name.has(\"OK\");",
							"",
							"if((tests[\"Validating Logout\"] = responseBody.has(\"User logged out\")));      ",
							"        console.log(\"Logout Validated\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var token = postman.getEnvironmentVariable(\"Token\"); ",
							"postman.setEnvironmentVariable(\"Token\", token);",
							"console.log(\"value of token set:\", token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authtoken",
						"value": "{{Token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{ServerURL}}/Logout",
					"host": [
						"{{ServerURL}}"
					],
					"path": [
						"Logout"
					]
				}
			},
			"response": []
		}
	]
}