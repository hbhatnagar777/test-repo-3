<?xml version="1.0" encoding="UTF-8"?>
<App_SetCustomRuleRequest>
    <queryDetail doesQuerySupportOutputFilter="1" frequency="86400"
        isDisabled="0" isOverwriteAssociationAtAlertAllowed="0"
        isPrimaryKeyPresent="1" isQueryModifyEnabled="1"
        isSystemCreated="0"
        queryCriteriaName="Number of jobs in queued state exceeds threshold"
        queryDescription="&lt;html>&#xd;&#xa;  &lt;head>&#xd;&#xa;    &#xd;&#xa;  &lt;/head>&#xd;&#xa;  &lt;body>&#xd;&#xa;    &lt;p style=&quot;margin-top: 0&quot;>&#xd;&#xa;      Alert when number of jobs in queued status exceed specified threshold&#xd;&#xa;    &lt;/p>&#xd;&#xa;  &lt;/body>&#xd;&#xa;&lt;/html>&#xd;&#xa;"
        sqlQuery="set transaction isolation level read uncommitted&#xa;declare @VisibleQueuedJobs table(&#xa;jobid int,&#xa;FaliureReason varchar(256)&#xa;)&#xa;&#xa;&#xa;INSERT INTO @VisibleQueuedJobs &#xa;SELECT jobID,failureReason FROM RunningBackups &#xa;    WHERE (@userId = userid or dbo.isBkpJobVisible(@userId,commCellId,clientId,appTypeId,instance,backupSet,applicationId) = 1) and state = 15&#xa;UNION &#xa;SELECT jobID,failureReason FROM RunningAdminJobs &#xa;    WHERE (@userId = userid or dbo.isAdminJobVisible(@userId,commCellId,archGrpID,jobID,opType,0) = 1) and state = 15&#xa;UNION&#xa;SELECT jobID,failureReason FROM RunningRestores&#xa;    WHERE (@userId = userid or dbo.isRstJobVisible(@userId,commCellId,srcClientid,destClientid,apptype,instanceid,bkpSetId)= 1) and state = 15&#xa;    &#xa;declare @count int&#xa;select @count = COUNT (*) from @VisibleQueuedJobs&#xa;if @count>=@inputcount&#xa;begin&#xa;&#xa;declare @combinedString nvarchar (4000)&#xa;declare @reasonsSplitTable table ( reason int)&#xa;&#xa;select @combinedString = Coalesce(@combinedString ,'','' ) +vj.FaliureReason from @VisibleQueuedJobs vj&#xa;--split and save this string to table as intvalues&#xa;&#xa;declare @index int = 1 &#xa;declare @begin int = 0&#xa;&#xa;while @index &lt;> 0&#xa;begin&#xa;set @index = charindex(',',@combinedString, @begin)&#xa;if @index &lt;>0&#xa;insert into @reasonsSplitTable select cast (SUBSTRING(@combinedString,@begin,(@index-@begin)) as int)&#xa;set @begin = @index+1&#xa;end&#xa;&#xa;declare @TopReasons nvarchar(60)&#xa;select top 3 @TopReasons = coalesce(@TopReasons ,'','') + cast(reason as nvarchar(20)) + ',' from @reasonsSplitTable group by reason  order by  count(*) desc&#xa;&#xa;select @count as NOQueuedJos, dbo.fn_WeedOutHtmlTags(dbo.JMGetLocalizedMessageMaxFunc(@localeid,@TopReasons)) as QueuedReasons ,1 as dummyPrimary&#xa;&#xa;end&#xa;&#xa;"
        taskInfoXml="&lt;?xml version='1.0' encoding='UTF-8'?>&lt;TMMsg_TaskInfo>&lt;task GUID=&quot;3e38fc50-a8f9-46db-a0f2-5888ce6105e8&quot; description=&quot;&quot; ownerId=&quot;1&quot; runUserId=&quot;1&quot; taskType=&quot;2&quot; ownerName=&quot;Administrator&quot; policyType=&quot;10&quot; taskName=&quot;&quot; alertId=&quot;0&quot; taskId=&quot;0&quot;>&lt;securityAssociations>&lt;ownerAssociations>&lt;categoryPermission />&lt;/ownerAssociations>&lt;/securityAssociations>&lt;taskFlags isEdgeDrive=&quot;0&quot; isEZOperation=&quot;0&quot; forDDB=&quot;0&quot; uninstalled=&quot;0&quot; disabled=&quot;0&quot; />&lt;originalCC commCellId=&quot;2&quot; />&lt;taskSecurity>&lt;associatedUserGroups userGroupId=&quot;1&quot; _type_=&quot;15&quot; userGroupName=&quot;master&quot; />&lt;associatedUserGroups userGroupId=&quot;3&quot; _type_=&quot;15&quot; userGroupName=&quot;View All&quot; />&lt;ownerCapabilities />&lt;/taskSecurity>&lt;/task>&lt;appGroup />&lt;subTasks>&lt;subTask subTaskOrder=&quot;0&quot; subTaskName=&quot;&quot; subTaskType=&quot;1&quot; flags=&quot;0&quot; operationType=&quot;5014&quot; subTaskId=&quot;0&quot; />&lt;pattern active_end_occurence=&quot;0&quot; freq_subday_interval=&quot;1800&quot; freq_type=&quot;2048&quot; patternId=&quot;1043&quot; flags=&quot;0&quot; description=&quot;Every week on Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday at 0:00   and repeats every 0 hr(s) 30 min(s) until 23:59 &quot; active_end_time=&quot;86340&quot; active_end_date=&quot;0&quot; skipOccurence=&quot;0&quot; skipDayNumber=&quot;0&quot; active_start_time=&quot;0&quot; freq_restart_interval=&quot;0&quot; active_start_date=&quot;1410134400&quot; freq_interval=&quot;127&quot; freq_relative_interval=&quot;0&quot; name=&quot;&quot; freq_recurrence_factor=&quot;1&quot;>&lt;daysToRun week=&quot;0&quot; Monday=&quot;1&quot; Thursday=&quot;1&quot; Friday=&quot;1&quot; Sunday=&quot;1&quot; Wednesday=&quot;1&quot; Tuesday=&quot;1&quot; day=&quot;0&quot; Saturday=&quot;1&quot; />&lt;calendar calendarName=&quot;Standard&quot; calendarId=&quot;1&quot; />&lt;timeZone TimeZoneID=&quot;1000&quot; />&lt;/pattern>&lt;options />&lt;/subTasks>&lt;/TMMsg_TaskInfo>" visibility="0">
        <creator userId="1" userName="Admin"/>
        <commcellAssociation>
            <entity _type_="124" commCellId="2" srmReportSet="0"
                srmReportType="0" type="0"/>
        </commcellAssociation>
        <queryEntity queryId="0" queryName="Number of jobs in queued state exceeds threshold"/>
        <queryOutputColumns columnFriendlyName="Number of jobs in queue"
            columnName="NOQueuedJos" isColumnFilterable="0"
            isPrimaryKey="0" lmDataType="0">
            <columnAdditionalDetails includeInAlertOutput="1"/>
        </queryOutputColumns>
        <queryOutputColumns
            columnFriendlyName="Top Reasons For Jobs being Queued"
            columnName="QueuedReasons" isColumnFilterable="0"
            isPrimaryKey="0" lmDataType="1">
            <columnAdditionalDetails includeInAlertOutput="1"/>
        </queryOutputColumns>
        <queryOutputColumns columnFriendlyName="dummyPrimary"
            columnName="dummyPrimary" isColumnFilterable="0"
            isPrimaryKey="1" lmDataType="0">
            <columnAdditionalDetails includeInAlertOutput="0"/>
        </queryOutputColumns>
        <queryParamsList>
            <queryParamsList controlType="0" defaultValue="0"
                displayName="Number of threshold jobs in queued state"
                documentation="" inputName="inputcount"
                inputType="java.lang.Integer" listType="0"
                maximumValue="" minimumValue="" readOnly="0"
                required="1"
                type="{http://www.w3.org/2001/XMLSchema}integer" typeOptions="0">
                <defaultValues val="0"/>
            </queryParamsList>
        </queryParamsList>
        <additionalQueryDetails alertCriteria="0" alertType="0"
            isHealthParam="0" querySeverity="3">
            <scriptDescription
                description="&lt;html>&#xd;&#xa;  &lt;head>&#xd;&#xa;    &#xd;&#xa;  &lt;/head>&#xd;&#xa;  &lt;body>&#xd;&#xa;    &lt;p style=&quot;margin-top: 0&quot;>&#xd;&#xa;      Alert when number of jobs in queued status exceed specified threshold&#xd;&#xa;    &lt;/p>&#xd;&#xa;  &lt;/body>&#xd;&#xa;&lt;/html>&#xd;&#xa;"
                guid="F445F2AE-C194-43EA-AD2B-931E869A221E"
                reportName="Number of jobs in queued state exceeds threshold" revision="$Revision: 1.1.2.1 $"/>
        </additionalQueryDetails>
    </queryDetail>
</App_SetCustomRuleRequest>
